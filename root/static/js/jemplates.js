/*
   This JavaScript code was generated by Jemplate, the JavaScript
   Template Toolkit. Any changes made to this file will be lost the next
   time the templates are compiled.

   Copyright 2006-2008 - Ingy d√∂t Net - All rights reserved.
*/

if (typeof(Jemplate) == 'undefined')
    throw('Jemplate.js must be loaded before any Jemplate template files');

Jemplate.templateMap['artist/detail.tt'] = function(context) {
    if (! context) throw('Jemplate function called without context\n');
    var stash = context.stash;
    var output = '';

    try {
output += '<table id="company" class="shortlist">\n		<thead>\n			<tr>\n				<th colspan="2" class="table-head"> <a href="#" id="toggle-forms">JJ Polyplast Inc</a>\n				</th>\n			</tr>\n		</thead>\n		<tbody>\n		<tr>\n			<th>Office Address</th>\n			<td >418 Arun Chambers, Tardeo, Mumbai 36</td>\n		</tr>\n		<tr>\n			<th>Contact Person</th>\n			<td >Harshal Shah</td>\n		</tr>\n		<tr>\n			<th>Contact No.</th>\n			<td >98323123012</td>\n		</tr>\n		<tr>\n			<th>Outstanding</th>\n			<td class="currency">12312364.00</td>\n		</tr>\n		<tr>\n			<th>Overdue by</th>\n			<td >30 days</td>\n		</tr>\n		</tbody>\n		<tfoot>\n			<tr >\n				<td colspan=2> <button class="button" >Print </button> \n				<button class="button" type=submit >Open</button>\n				<button class="button" type=submit >Email</button></td>\n			</tr>\n			<tr >\n				<td colspan=2><span class="help">Make Sale from this Invoice</span></th>\n			</tr>\n			<tr >\n				<td colspan=2><span class="help">Show Sales made from this Invoice</span></th>\n			</tr>\n			<tr >\n				<td colspan=2><span class="help">Duplicate this Invoice</span></th>\n			</tr>\n		</tfoot>\n</table>\n\n\n\n\n';
    }
    catch(e) {
        var error = context.set_error(e, output);
        throw(error);
    }

    return output;
}

Jemplate.templateMap['artist/form.tt'] = function(context) {
    if (! context) throw('Jemplate function called without context\n');
    var stash = context.stash;
    var output = '';

    try {
output += '\n';

output += '\n\n';

output += '\n\n';

output += '\n\n';

output += '\n\n';
    }
    catch(e) {
        var error = context.set_error(e, output);
        throw(error);
    }

    return output;
}

Jemplate.templateMap['artist/form/b1'] = function(context) {
    if (! context) throw('Jemplate function called without context\n');
    var stash = context.stash;
    var output = '';

    try {
output += '\n	<p>\n        <label>Name: </label>\n        <input type="text" name="name" value="';
//line 12 "artist/form.tt"
output += stash.get(['artist', 0, 'name', 0]);
output += '" class="required"/>\n    </p>\n    <p>\n        <label>Summary: </label>\n        <input type="text" name="summary" value="';
//line 16 "artist/form.tt"
output += stash.get(['artist', 0, 'summary', 0]);
output += '" class="required"/>\n    </p>\n\n';
    }
    catch(e) {
        var error = context.set_error(e, output);
        throw(error);
    }

    return output;
}

Jemplate.templateMap['artist/form/b2'] = function(context) {
    if (! context) throw('Jemplate function called without context\n');
    var stash = context.stash;
    var output = '';

    try {
output += '\n    <p>\n        <label>Telephone 1: </label>\n        <input type="text" name="tel1" value="';
//line 24 "artist/form.tt"
output += stash.get(['artist', 0, 'tel1', 0]);
output += '" class="required"/>\n    </p>\n\n    <p>\n        <label>Telephone 2: </label>\n        <input type="text" name="tel2" value="';
//line 29 "artist/form.tt"
output += stash.get(['artist', 0, 'tel2', 0]);
output += '" class="required"/>\n    </p>\n    <p>\n        <label>Mobile : </label>\n        <input type="text" name="mobile" value="';
//line 33 "artist/form.tt"
output += stash.get(['artist', 0, 'mobile', 0]);
output += '" class="required"/>\n    </p>\n\n    <p>\n        <label>Email : </label>\n        <input type="text" name="email" value="';
//line 38 "artist/form.tt"
output += stash.get(['artist', 0, 'email', 0]);
output += '" class="required"/>\n    </p>\n    <p>\n        <label>Website: </label>\n        <input type="text" name="website" value="';
//line 42 "artist/form.tt"
output += stash.get(['artist', 0, 'website', 0]);
output += '" class="required"/>\n    </p>\n';
    }
    catch(e) {
        var error = context.set_error(e, output);
        throw(error);
    }

    return output;
}

Jemplate.templateMap['artist/form/b3'] = function(context) {
    if (! context) throw('Jemplate function called without context\n');
    var stash = context.stash;
    var output = '';

    try {
output += '\n\n    <p class="fieldtag">\n        <label>Office Address : </label>\n        <input type="text" name="address_1" value="';
//line 50 "artist/form.tt"
output += stash.get(['artist', 0, 'address_1', 0]);
output += '" title="Addres Line 1"/>\n        <input type="text" name="address_2" value="';
//line 51 "artist/form.tt"
output += stash.get(['artist', 0, 'address_2', 0]);
output += '" title="Addres Line 2"/>\n        <input type="text" name="city" value="';
//line 52 "artist/form.tt"
output += stash.get(['artist', 0, 'city', 0]);
output += '" title="City1"/>\n        <input type="text" name="state" value="';
//line 53 "artist/form.tt"
output += stash.get(['artist', 0, 'state', 0]);
output += '" title="State"/>\n        <input type="text" name="zip" value="';
//line 54 "artist/form.tt"
output += stash.get(['artist', 0, 'zip', 0]);
output += '" title="zip"/>\n        <input type="text" name="country" value="India" title="country"/>\n	</p>\n\n\n';
    }
    catch(e) {
        var error = context.set_error(e, output);
        throw(error);
    }

    return output;
}

Jemplate.templateMap['artist/form/hidden'] = function(context) {
    if (! context) throw('Jemplate function called without context\n');
    var stash = context.stash;
    var output = '';

    try {
output += '\n\n	<input type=hidden name="id" value="';
//line 4 "artist/form.tt"
output += stash.get(['artist', 0, 'id', 0]);
output += '"/>\n	<input type=hidden name="is_company" value="';
//line 5 "artist/form.tt"
output += stash.get(['artist', 0, 'is_company', 0]);
output += '"/>\n	<input type=hidden name="company_id" value="';
//line 6 "artist/form.tt"
output += stash.get(['artist', 0, 'company_id', 0]);
output += '"/>\n';
    }
    catch(e) {
        var error = context.set_error(e, output);
        throw(error);
    }

    return output;
}

Jemplate.templateMap['artist/list.tt'] = function(context) {
    if (! context) throw('Jemplate function called without context\n');
    var stash = context.stash;
    var output = '';

    try {
output += '\n';
    }
    catch(e) {
        var error = context.set_error(e, output);
        throw(error);
    }

    return output;
}

Jemplate.templateMap['artist/select.tt'] = function(context) {
    if (! context) throw('Jemplate function called without context\n');
    var stash = context.stash;
    var output = '';

    try {
//line 7 "artist/select.tt"
if (stash.get('type') == 'ALL') {
output += '\n    ';
//line 2 "artist/select.tt"
stash.set('company_rs', stash.get(['c', 0, 'model', [ 'DemoDB::Company' ], 'all', 0]));
output += '\n';
}
else if (stash.get('type') == 'SUPPLIER') {
output += '\n    ';
//line 4 "artist/select.tt"
stash.set('company_rs', stash.get(['c', 0, 'model', [ 'DemoDB::Company' ], 'suppliers', 0]));
output += '\n';
}
else {
output += '\n    ';
//line 6 "artist/select.tt"
stash.set('company_rs', stash.get(['c', 0, 'model', [ 'DemoDB::Company' ], 'buyers', 0]));
output += '\n';
}

output += '\n';
//line 12 "artist/select.tt"

// FOREACH 
(function() {
    var list = stash.get('company_rs');
    list = new Jemplate.Iterator(list);
    var retval = list.get_first();
    var value = retval[0];
    var done = retval[1];
    var oldloop;
    try { oldloop = stash.get('loop') } finally {}
    stash.set('loop', list);
    try {
        while (! done) {
            stash.data['company'] = value;
output += '\n    <option value="';
//line 9 "artist/select.tt"
output += stash.get(['company', 0, 'id', 0]);
output += '" ';
//line 9 "artist/select.tt"
if (stash.get(['company', 0, 'id', 0]) == stash.get('match')) {
output += ' selected ';
}

output += '>\n        ';
//line 10 "artist/select.tt"
output += stash.get(['company', 0, 'name', 0]);
output += '\n</option>\n';;
            retval = list.get_next();
            value = retval[0];
            done = retval[1];
        }
    }
    catch(e) {
        throw(context.set_error(e, output));
    }
    stash.set('loop', oldloop);
})();

output += '\n';
    }
    catch(e) {
        var error = context.set_error(e, output);
        throw(error);
    }

    return output;
}

Jemplate.templateMap['sale/detail'] = function(context) {
    if (! context) throw('Jemplate function called without context\n');
    var stash = context.stash;
    var output = '';

    try {
output += '<table class="invoice" id="sale">\n                        <thead>\n							<tr>\n								<th colspan="2" class="table-head"> <a href="#" id="toggle-forms">Invoice No</a>\n                                </th>\n							</tr>\n                       	</thead>\n                        <tbody>\n                        <tr>\n                            <th>Date</th>\n                            <td >25/7/2009</td>\n                        </tr>\n                        <tr>\n                            <th>Product</th>\n                            <td >PVC Resin</td>\n                        </tr>\n                        <tr>\n                            <th>Warehouse</th>\n                            <td >$200.00</td>\n                        </tr>\n                        <tr>\n                            <th>Cenvat</th>\n                            <td class="currency">$64.00</td>\n                        </tr>\n                        <tr>\n                            <th>Education Cess</th>\n                            <td class="currency">$36.00</td>\n                        </tr>\n                        <tr>\n                            <th>Education Cess</th>\n                            <td class="currency">$36.00</td>\n                        </tr>\n                        </tbody>\n                        <tfoot>\n                            <tr >\n                                <td colspan=2> <button class="button" >Print </button> \n								<button class="button" type=submit >Open</button>\n								<button class="button" type=submit >Email</button></td>\n                            </tr>\n                            <tr >\n							    <td colspan=2><span class="help">Make Sale from this Invoice</span></th>\n                            </tr>\n                            <tr >\n							    <td colspan=2><span class="help">Show Sales made from this Invoice</span></th>\n                            </tr>\n                            <tr >\n							    <td colspan=2><span class="help">Duplicate this Invoice</span></th>\n                            </tr>\n                        </tfoot>\n</table>\n\n';
    }
    catch(e) {
        var error = context.set_error(e, output);
        throw(error);
    }

    return output;
}

Jemplate.templateMap['sale/form'] = function(context) {
    if (! context) throw('Jemplate function called without context\n');
    var stash = context.stash;
    var output = '';

    try {
output += '<style>\n/* form wizards \n------------------------------------------------*/\n\n\n.prev, .next { background-color:#b0232a; padding:5px 10px; color:#fff; text-decoration:none; margin-top:5px;margin-bottom:5px;}\n\n.prev:hover, .next:hover { background-color:#000; text-decoration:none;}\n\n.prev { float:left;}\n\n.next { float:right;}\n\n#steps { list-style:none; width:100%; overflow:hidden; margin:0px; padding:0px;}\n\n#steps li {font-size:16px; float:left; padding:1px; color:#b0b1b3;}\n\n#steps li span {font-size:11px; display:block; color:#b0b1b3;}\n#steps li span.error {color:red;}\n\n\n#steps li.current { color:#000;}\n\n#steps li.ButtonPanel {\n	padding:0px;\n	font-size:10px;\n	cursor:pointer;\n}\n\n#steps li.ButtonPanel a.Buttons {\n	\n	font-size:10px;\n	float:right;\n}\n\n</style>\n<h2>\n<a href="#" id="toggle-forms">Sales Invoice</a>\n</h2>\n<form action="';
//line 40 "sale/form"
output += stash.get(['c', 0, 'uri_for', [ '/sale/put' ]]);
output += '" method="POST" class="wizard">\n	<input type=hidden name="id" value="';
//line 41 "sale/form"
output += stash.get(['sale', 0, 'id', 0]);
output += '"/>\n    <input type=hidden name="purchase_id" value="';
//line 42 "sale/form"
output += stash.get(['sale', 0, 'purchase_id', 0]);
output += '" />\n    <input type=hidden name="is_cancelled" value="';
//line 43 "sale/form"
output += stash.get(['sale', 0, 'is_cancelled', 0]);
output += '" />\n    <fieldset class="login" >\n		<legend>Invoice Details</legend>\n        <div class="grid_5 box" >\n		<p>\n			<label>Invoice Type: </label>\n			<select id="invoice_type" name="invoice_type" ';
//line 49 "sale/form"
if (stash.get(['sale', 0, 'id', 0])) {
output += 'disabled="true"';
}

output += '>\n                ';
//line 50 "sale/form"
output += context.process('sale/select', { 'match': stash.get(['sale', 0, 'invoice_type', 0]) });
output += '\n            </select>\n		</p>\n        ';
//line 59 "sale/form"
if (stash.get(['sale', 0, 'invoice_type', 0]) == 1 || stash.get(['sale', 0, 'invoice_type', 0]) == 3 || stash.get(['sale', 0, 'invoice_type', 0]) == 5) {
output += '\n		<p>\n			<label>Excise Invoice No: </label>\n			<input type="text" name="invoice_no" value="';
//line 57 "sale/form"
output += stash.get(['sale', 0, 'invoice_no', 0]);
output += '" readonly />\n		</p>\n        ';
}

output += '\n		<p>\n			<label> Invoice Date: </label>\n			<input type="text" name="invoice_date" value="';
//line 62 "sale/form"
output += stash.get(['sale', 0, 'invoice_date', 0]);
output += '" class="required"/>\n		</p>\n		<p>\n			<label>Invoice Time: </label>\n			<input type="text" name="invoice_time" value="';
//line 66 "sale/form"
output += stash.get(['sale', 0, 'invoice_time', 0]);
output += '" class="required"/>\n		</p>\n        ';
//line 73 "sale/form"
if (stash.get(['sale', 0, 'invoice_type', 0]) == 2 || stash.get(['sale', 0, 'invoice_type', 0]) == 3) {
output += '\n		<p>\n			<label>Comm. Tax Invoice No: </label> \n			<input type="text" name="comm_invoice_no" value="';
//line 71 "sale/form"
output += stash.get(['sale', 0, 'comm_invoice_no', 0]);
output += '" readonly />\n		</p>\n        ';
}

output += '\n        ';
//line 79 "sale/form"
if (stash.get(['sale', 0, 'invoice_type', 0]) == 4 || stash.get(['sale', 0, 'invoice_type', 0]) == 5) {
output += '\n        <p>\n			<label>Comm. Retail Invoice No: </label> \n			<input type="text" name="comm_invoice_no" value="';
//line 77 "sale/form"
output += stash.get(['sale', 0, 'comm_invoice_no', 0]);
output += '" readonly />		\n		</p>\n        ';
}

output += '\n		</div><!-- grid_5 -->\n        <div class="grid_5 box" >\n		<p>\n			<label>Challan No: </label>\n			<input type="text" name="challan_no" value="';
//line 84 "sale/form"
output += stash.get(['sale', 0, 'challan_no', 0]);
output += '" />\n		</p>\n		<p>\n			<label>Challan Date: </label>\n			<input type="text" name="challan_date" value="';
//line 88 "sale/form"
output += stash.get(['sale', 0, 'challan_date', 0]);
output += '" />\n		</p>\n		<p>\n			<label>Order No: </label>\n			<input type="text" name="order_no" value="';
//line 92 "sale/form"
output += stash.get(['sale', 0, 'order_no', 0]);
output += '" />\n		</p>\n		<p>\n			<label>Order Date: </label>\n			<input type="text" name="order_date" value="';
//line 96 "sale/form"
output += stash.get(['sale', 0, 'order_date', 0]);
output += '" />\n		</p>\n        <p>\n			<label>Removal Date: </label>\n			<input type="text" name="removal_date" value="';
//line 100 "sale/form"
output += stash.get(['sale', 0, 'removal_date', 0]);
output += '"/>\n		</p>\n		\n		<p>\n			<label>Removal Time: </label>\n			<input type="text" name="removal_time" value="';
//line 105 "sale/form"
output += stash.get(['sale', 0, 'removal_time', 0]);
output += '"/>\n			<span class="help">for eg. 2:45 pm</span>\n		</p>\n\n	</div><!-- grid_5 -->\n	</fieldset>\n\n    <fieldset >\n        <legend>Buyer Details</legend>\n        <div class="grid_5 box"> <!-- grid_5 -->\n        <p>\n            <label>Buyer: </label>\n            <select name="buyer_id" class="required">\n            <option value="">Select Buyer</option>\n                ';
//line 119 "sale/form"
output += context.process('company/select', { 'match': stash.get(['sale', 0, 'buyer_id', 0]) });
output += '\n            </select>\n            \n            <span class="help add_company" > Not found ? Click here to add</span>\n        </p>\n        <p>\n            <label>Consignee: </label>\n            <select name="consignee_id" class="required">\n            <option value="">Select Consignee</option>\n                ';
//line 129 "sale/form"
output += context.process('company/select', { 'match': stash.get(['sale', 0, 'consignee_id', 0]) });
output += '\n                        \n            </select>\n            \n            <span class="help add_company" > Not found ? Click here to add</span>\n        </p>\n        <p>\n            <label>Product Description: </label>\n            <select name="product_id" class="required">\n                <option value="">Please select a Product</option>\n                ';
//line 140 "sale/form"
output += context.process('product/select', { 'match': stash.get(['sale', 0, 'product_id', 0]) });
output += '\n            </select>\n            <a href="';
//line 143 "sale/form"
output += stash.get(['c', 0, 'uri_for', [ '/purchase/get/new' ]]);
output += '" class="help"> Not found ? Click here to add</a>\n        </p>\n    </div>\n    <div class="grid_5 box"> <!-- grid_5 -->\n        <p>\n            <label>Units of Measurement: </label>\n            <input type="text" name="uom" value="';
//line 149 "sale/form"
output += stash.get(['sale', 0, 'uom', 0]);
output += '" class="required" readonly=true/>\n        </p>\n        <p>\n            <label>Balance Quantity :<span id="balance_quantity">';
//line 152 "sale/form"
if (stash.get(['sale', 0, 'purchase_id', 0])) {
//line 152 "sale/form"
output += stash.get(['sale', 0, 'purchase', 0, 'quantity', 0]);
}

output += '</span> out of <span id="purchase_quantity">';
//line 152 "sale/form"
if (stash.get(['sale', 0, 'purchase_id', 0])) {
//line 152 "sale/form"
output += stash.get(['sale', 0, 'purchase', 0, 'quantity', 0]);
}

output += '</span> &nbsp;<span id="uom">';
//line 152 "sale/form"
output += stash.get(['sale', 0, 'purchase', 0, 'uom', 0]);
output += '</span></label>\n        </p>\n        <p>\n            <label>Supplier Type: <span id="supplier_type">';
//line 155 "sale/form"
output += stash.get(['sale', 0, 'purchase', 0, 'supplier_type', 0]);
output += '</span></label>\n        </p>\n        <p>\n            <label>Assessble Value: <span id="assessable_value">';
//line 158 "sale/form"
output += stash.get(['sale', 0, 'purchase', 0, 'assessable_value', 0]) || 0;
output += '</span></label>\n        </p>\n\n        <p>\n            <label>Suplier Info: <span id="supplier_info" class=\'{ "purchase_id" : "';
//line 162 "sale/form"
output += stash.get(['sale', 0, 'purchase_id', 0]);
output += '"}\'>Invoice No ';
//line 162 "sale/form"
output += stash.get(['sale', 0, 'purchase', 0, 'invoice_no', 0]);
output += ', ';
//line 162 "sale/form"
output += stash.get(['sale', 0, 'purchase', 0, 'invoice_date', 0]);
output += '</span></label>\n        </p>\n        </div> <!-- grid5 -->\n    </fieldset>\n    \n	<fieldset >\n		<legend>Product Information</legend>\n        <div class="grid_5 box" >\n		<p>\n			<label>Rate: </label>\n			<input type="text" name="rate" value="';
//line 172 "sale/form"
output += stash.get(['sale', 0, 'rate', 0]) || 0;
output += '" class="number required"/>\n		</p>\n		<p>\n			<label>Quantity: </label>\n			<input type="text" name="quantity" value="';
//line 176 "sale/form"
output += stash.get(['sale', 0, 'quantity', 0]) || 0;
output += '" class="number required"/>\n		</p>\n		<p>\n			<label>Taxable Value: </label>\n			<input type="text" name="taxable_value" value="';
//line 180 "sale/form"
output += stash.get(['sale', 0, 'taxable_value', 0]);
output += '" readonly="true"/>\n		</p>\n		<p>\n			<label>Sales Tax Type: </label>\n			<select name="sales_tax_id" class="required">\n\n                ';
//line 186 "sale/form"
output += context.process('modifier/salestax', { 'match': stash.get(['sale', 0, 'sales_tax_id', 0]) });
output += '\n			</select>\n			<span class="help add_sales_tax" > Not found ? Click here to add</span>\n		</p>\n		<p>\n			<label>Sales Tax: </label>\n			<input type="text" name="sales_tax" value="';
//line 194 "sale/form"
output += stash.get(['sale', 0, 'sales_tax', 0]);
output += '" class="number" />\n		</p>\n		<p>\n			<label>Additional Sales Tax: </label>\n			<input type="text" name="addl_sales_tax" value="';
//line 198 "sale/form"
output += stash.get(['sale', 0, 'addl_sales_tax', 0]);
output += '" class="number" />\n		</p>\n\n        </div><!-- grid_5 -->\n        <div class="grid_5 box" >\n		<p >\n			<label>Assessable Value: </label>\n			<input type="text" name="assessable_value" value="';
//line 205 "sale/form"
output += stash.get(['sale', 0, 'assessable_value', 0]) || 0;
output += '" class="number" readonly="true"/>\n		</p>\n		<p>\n			<label>Manufacturer Rate of Duty: </label>\n			<select name="cenvat_rate_id" class="required">\n				';
//line 210 "sale/form"
output += context.process('modifier/cenvat', { 'match': stash.get(['sale', 0, 'cenvat_rate_id', 0]) });
output += '\n			</select>\n			<span class="help add_cenvat" > Not found ? Click here to add</span>\n		</p>\n		<p >\n			<label>Cenvat : </label>\n			<input type="text" name="cenvat" value="';
//line 218 "sale/form"
output += stash.get(['sale', 0, 'cenvat', 0]);
output += '" class="number" readonly="true"/>\n		</p>\n\n		<p >\n			<label>Higher Education Cess (2%): </label>\n			<input type="text" name="sec_edu_cess" value="';
//line 223 "sale/form"
output += stash.get(['sale', 0, 'sec_edu_cess', 0]);
output += '"  class="number" readonly="true"/>\n		</p>\n		<p >\n			<label>SH Education Cess (1%): </label>\n			<input type="text" name="hs_edu_cess" value="';
//line 227 "sale/form"
output += stash.get(['sale', 0, 'hs_edu_cess', 0]);
output += '"  class="number" readonly="true"/>\n		</p>\n\n		<p >\n			<label>Total Additional Duty (CVD): </label>\n			<input type="text" name="cvd" value="';
//line 232 "sale/form"
output += stash.get(['sale', 0, 'cvd', 0]);
output += '"  class="number" readonly="true"/>\n		</p>\n\n        </div><!-- grid_5 -->\n\n	</fieldset>\n    <fieldset >\n        <legend>Transport & Summary</legend>\n        <div class="grid_5 box"> <!-- grid_5 -->\n        <p>\n            <label>LR No: </label>\n            <input type="text" name="lr_no" value="';
//line 243 "sale/form"
output += stash.get(['sale', 0, 'lr_no', 0]);
output += '" >\n        </p>\n        <p>\n            <label>Batch No: </label>\n            <input type="text" name="batch_no" value="';
//line 247 "sale/form"
output += stash.get(['sale', 0, 'batch_no', 0]);
output += '" />\n        </p>\n        <p>\n            <label>Vehicle No: </label>\n            <input type="text" name="vehicle_no" value="';
//line 251 "sale/form"
output += stash.get(['sale', 0, 'vehicle_no', 0]);
output += '" />\n        </p>\n        <p>\n            <label>Mode of Transport: </label>\n            <select name="transport_mode">\n                <option value="">Select Mode of Transport</option>\n                <option value="Road">Road</option>\n                <option value="Rail">Rail</option>\n                <option value="Air">Air</option>\n                <option value="Ship">Ship</option>\n            </select>\n        </p>\n        <p>\n            <label>Transporter Name: </label>\n            <input type="text" name="transporter_name" value="';
//line 265 "sale/form"
output += stash.get(['sale', 0, 'transporter_name', 0]);
output += '" />\n        </p>\n        </div>\n        <div class="grid_5 box"> <!-- grid_5 -->\n        <p>\n            <label>Summary: </label>\n            <textarea name=summary>';
//line 271 "sale/form"
output += stash.get(['sale', 0, 'summary', 0]);
output += '</textarea>\n        </p>\n	<p>\n		<label>Payment within Days: </lable>\n		<input type="text" name="credit_days" value="';
//line 275 "sale/form"
output += stash.get('credit_days');
output += '" />\n	</p>\n	<p>\n		<label>Documents Through: </lable>\n		<input type="text" name="documents_through" value="';
//line 279 "sale/form"
output += stash.get('documents_through');
output += '" />\n	</p>	\n        <p>\n			<label>Total Amount: </label>\n			<input type="text" name="total_invoice_amount" value="';
//line 283 "sale/form"
output += stash.get(['sale', 0, 'total_invoice_amount', 0]);
output += '"/>\n	</p>\n\n\n    </div> <!-- grid_5 -->\n    </fieldset>\n<!--\n		<button class="button" type=submit id="SaveButton">Save</button>\n		<button class="button" type=reset>Cancel</button>\n		<span class="button hide" id=recalculate >Recalcualte</span>\n        ';
//line 296 "sale/form"
if (stash.get(['sale', 0, 'id', 0])) {
output += '\n		<a class="button" href="';
//line 1 "sale/form"
output += stash.get(['c', 0, 'uri_for', [ '/sale/publish/' + stash.get(['sale', 0, 'id', 0]) ]]);
output += '" >Export to pdf</a>\n		<button class="button" type=reset>Email</button>\n        ';
}

output += '\n-->\n        <span class="button hide"  style="display:none;" id="recalculate">Recalc</span>\n\n</form>\n\n\n';
    }
    catch(e) {
        var error = context.set_error(e, output);
        throw(error);
    }

    return output;
}

Jemplate.templateMap['sale/js'] = function(context) {
    if (! context) throw('Jemplate function called without context\n');
    var stash = context.stash;
    var output = '';

    try {
//line 283 "sale/js"
if (stash.get('tmpl') == 'form') {
output += '\n$(document).ready(function() {\n\n	$("#available-stock").hide();\n	\n	$("form.new_warehouse").css("margin-top", "600px");\n\n	$("form.new_tax").css("margin-top", "300px");\n\n	var tax_elements = { "cenvat" : "assessable_value", "cvd" : "assessable_value", "sec_edu_cess": "cenvat", "hs_edu_cess" : "cenvat"};\n\n	var input_triggers = new Array( "quantity" , "rate");\n\n	var select_triggers = new Array("cenvat_rate_id", "sales_tax_id");\n\n	var number_elements = new Array( "taxable_value", "sales_tax", "total_invoice_amount");\n\n	$.each(input_triggers, function(n, el) {\n		\n		$(".mainbar input[name=" + el+ "]").change(function(ev) {\n			\n			$(this).format({format:"#.00", locale:"in"});\n			$("span#recalculate").click();\n		});\n	});	\n\n	 $.each(select_triggers, function(n, el) {\n		\n		$(".mainbar select[name=" + el + "]").change(function(ev) {\n			$("span#recalculate").click();\n		});\n		\n	});   \n				\n	$.each(tax_elements, function(el, val) {\n		$(".mainbar input[name=" + el+ "]").blur(function(ev) {\n			$(this).format({format:"#.00", locale:"in"});\n		}).blur();\n	});\n\n	$.each(number_elements, function(n, el) {\n		\n		$(".mainbar input[name=" + el+ "]").blur(function(ev) {\n\n			$(this).format({format:"#.00", locale:"in"});\n\n		}).blur();\n	});\n	$("span#recalculate").click(function(ev) {\n\n		$(".mainbar input[name=assessable_value]").val(\n			$("span#assessable_value").text() \n			/ $("span#purchase_quantity").text() * $(".mainbar input[name=quantity]").val()\n		).blur();\n\n         var cenvat_data = $(".mainbar select[name=cenvat_rate_id] option:selected").metadata();\n\n         $.each(tax_elements, function(sel, target) {\n\n             $(".mainbar input[name=" + sel + "]")\n             .val(  $(".mainbar input[name=" + target + "]").val() * cenvat_data[sel] / 100 ).blur();\n             });\n\n         var taxable_value = $(".mainbar input[name=rate]").val() * $(".mainbar input[name=quantity]").val();\n\n         $(".mainbar input[name=taxable_value]")\n             .val( taxable_value ).blur();\n\n         var st_data = $(".mainbar select[name=sales_tax_id] option:selected").metadata();\n\n         var sales_tax = taxable_value * st_data[\'sales_tax\'] / 100;\n         var addl_sales_tax = taxable_value * st_data[\'addl_sales_tax\'] / 100;\n\n         $(".mainbar input[name=sales_tax]")\n             .val( sales_tax ).blur();\n\n         $(".mainbar input[name=addl_sales_tax]")\n             .val( addl_sales_tax ).blur();\n\n         $(".mainbar input[name=total_invoice_amount]")\n             .val( taxable_value + sales_tax + addl_sales_tax ).blur();\n\n        return false;\n	});\n    $("#available-stock").find( "a").click(function(ev) {\n        $("#available-stock").hide();\n        // split the href into purchase_id, balance_quantity, uom, \n        var metadata = $(this).metadata();\n		\n        // add validation rule\n        $("span#balance_quantity").text(metadata[\'quantity\']);\n        $("span#purchase_quantity").text(metadata[\'p_quantity\']);\n        //$("span#supplier_info").data("invoice_no", metadata[\'invoice_no\']);\n       // $("span#supplier_info").data("invoice_date", metadata[\'invoice_date\']);\n        $("span#supplier_info").text("Invoice No. " + metadata[\'invoice_no\'] + " dated " + metadata[\'invoice_date\']);\n		\n		var dateArray = metadata[\'invoice_date\'].split(\'-\');\n        var x = dateArray[0];\n        var y = dateArray[1];\n        y = y-1;\n        var z = dateArray[2];\n		var prevDate = new Date(x, y, z);\n		$(".mainbar input[name=invoice_date]").datepicker(\'option\', \'minDate\', prevDate);\n        //console.log(invoice_date);\n        $(".mainbar input[name=quantity]").rules("remove", "max");\n	\n		$(".mainbar input[name=quantity]").rules("add", {"max" :  metadata[\'quantity\'] });\n        \n        $("span#uom").text(metadata[\'uom\']);\n        $("input[name=uom]").val(metadata[\'uom\']);\n\n        $(".mainbar input[name=purchase_id]").val(metadata[\'purchase_id\']);\n        $("span#supplier_type").text(metadata[\'supplier_type\']);\n\n        $("span#assessable_value").text(metadata[\'assessable_value\']);\n\n        \n\n		return false;\n	});\n\n	$(".mainbar select[name=product_id]").change(function(ev) {\n		\n		 /* Minimize the recent invoices tab */\n			if (!$("#toggle-section-menu").hasClass("hidden")) \n				$("#toggle-section-menu").click();\n		\n			/* hide other forms */\n			$("div.sidebar form").hide();\n\n            \n			/* show your self */\n			$("#available-stock").show().find("li").hide();\n            \n            $("#available-stock li.product_" + $(this).val()).show();\n\n			var prevDate = $(".mainbar input[name=invoice_date]").datepicker("getDate");\n\n			$(".mainbar input[name=invoice_date]").datepicker(\'option\', \'minDate\', prevDate);\n\n	}).trigger("change");\n\n	$(".mainbar select[name=invoice_type]").change(function(ev) {\n	    \n        var type = $(this).val();\n        location.href = \'';
//line 146 "sale/js"
output += stash.get(['c', 0, 'uri_for', [ '/sale/new/0/' ]]);
output += '\' + type;\n    });\n\n   	sidebar_forms = {\n\n\n		"company" 	: add_company,\n		"cenvat" 	: add_cenvat,\n		"sales_tax" : add_sales_tax,\n	};\n\n    validation_rules = {\n        quantity : {\n	';
//line 161 "sale/js"
if (stash.get(['sale', 0, 'purchase_id', 0])) {
output += '	\n            max: ';
//line 160 "sale/js"
output += stash.get(['sale', 0, 'purchase', 0, 'quantity', 0]);
output += ',\n	';
}

output += '\n	    min:0\n        }\n    }\n    init_sidebar_forms();\n\n	//var prevDate = $(".mainbar input[name=invoice_date]").datepicker("getDate");\n	//var prevDate = new Date();\n\n    //$(".mainbar input[name=invoice_date]").datepicker(\'option\', \'minDate\', prevDate);\n\n	$(".mainbar input[name=invoice_date]").change(function(ev) {\n			\n		$(".mainbar input[name=removal_date]").datepicker(\'option\', \'minDate\',  $(this).datepicker("getDate"));\n		\n		$(".mainbar input[name=challan_date]").datepicker(\'option\', \'minDate\',  $(this).datepicker("getDate"));\n		\n\n	}).change();\n\n    var supplier_metadata =  $("span#supplier_info").metadata();\n    \n    if ( supplier_metadata["purchase_id"] == $("input[name=purchase_id]") .val() ){\n			\n	$(".mainbar input[name=quantity]").rules("remove", "max");\n\n     }\n    \n   $("div.mainbar form.wizard").formToWizard({ \n        submitButton: \'SaveButton\' , \n        element: \'fieldset\', \n        usePanel:true, \n        buttonPanelNames: [\'Save\', \'Cancel\',\'Print\'],\n        buttonPanelIds:[\'SaveLink\', \'CancelLink\', \'PrintLink\']\n    });\n\n	$("#CancelLink").click(function(ev) {\n\n		if(confirm("Are you sure you want to cancel this invoice ?") )\n			CancelInvoice();\n	});\n\n	$("a#SaveLink").click(function(ev) {\n\n		$("div.mainbar form").submit();\n	});\n\n	$("a#PrintLink").click(function(ev) {\n\n		PrintInvoice();\n	});\n\n\n\n});\n\nfunction add_company(metadata) {\n    \n    $(".mainbar select[name=buyer_id]").addOption(metadata[\'id\'], metadata[\'name\']).trigger("change");\n\n    $(".mainbar select[name=consignee_id]").addOption(metadata[\'id\'], metadata[\'name\']).trigger("change");\n}\n\nfunction add_cenvat(metadata) {\n\n    var metadata_str = \'{\';\n    var text_str = \'\';\n    \n    console.log($.dump(metadata));\n    $.each(["cenvat",  "sec_edu_cess", "hs_edu_cess", "cvd"], function(n,val) {\n\n       // { "cenvat" : "8", "edu_Cess" : "4" }\n       metadata_str += \'"\' + val + \'"\' + \':\' + \'"\' + metadata[val] + \'"\' + ",";\n       text_str += metadata[val] + "%, ";\n    });\n\n    metadata_str += \'}\';\n\n    $(".mainbar select[name=cenvat_rate_id]").addOption(metadata[\'id\'], text_str);\n\n    $(".mainbar select[name=cenvat_rate_id]")\n        .selectOptions(metadata[\'id\'])\n        .find("option:selected")\n        .addClass(metadata_str);\n\n    $(".mainbar select[name=cenvat_rate_id]").trigger("change");\n}\n\nfunction add_sales_tax (metadata) {\n\n    var metadata_str = \'{\';\n    var text_str = \'\';\n\n    $.each(["sales_tax", "addl_sales_tax" ], function(n,val) {\n\n       // { "cenvat" : "8", "edu_cess" : "4" }\n       metadata_str += \'"\' + val + \'"\' + \':\' + \'"\' + metadata[val] + \'"\' + ",";\n       \n    });\n\n    metadata_str += \'}\';\n\n    text_str += metadata[\'sales_tax\'] + "%";\n    if (metadata[\'addl_sales_tax\']) \n	text_str += ", " + metadata[\'addl_sales_tax\'] + "%";\n    \n    if (metadata[\'form_type\']) \n	text_str += " under " + metadata[\'form_type\'] ;\n\n    $(".mainbar select[name=sales_tax_id]").addOption(metadata[\'id\'], text_str);\n\n    $(".mainbar select[name=sales_tax_id]")\n        .selectOptions(metadata[\'id\'])\n        .find("option:selected")\n        .addClass(metadata_str);\n\n\n    $(".mainbar select[name=sales_tax_id]").trigger("change");\n\n}\n\n\n';
}

output += '\n\n';
//line 319 "sale/js"
if (stash.get('tmpl') == 'list') {
output += '\n\n\n$(document).ready(function() {\n\n	$("div.sidebar table").hide();\n    $("input[name$=date], input.datepicker").datepicker({dateFormat:\'yy-mm-dd\'});\n	\n	$(".mainbar tbody tr").find("td:first").css("color", "blue")\n	.siblings().find("span.delete").click(function() {\n		\n		if ( $(this).metadata()[\'id\'] && confirm("Sure  you want to delete " + $(this).metadata()[\'id\'] + " ?") ) {\n			\n			$(this).parents("tr:first").hide();\n			\n			$.post("';
//line 300 "sale/js"
output += stash.get(['c', 0, 'uri_for', [ '/sale/delete/' ]]);
output += '" + $(this).metadata()[\'id\'] , function(json_data, status) {\n				\n				if (!json_data[\'error\']) \n					$().message("Delete Successful");\n			});\n		}\n	});\n	var table = $(".mainbar table");\n	var pager = $(table).siblings("div.pager");\n	$(table)\n			.tablesorter()\n			.tablesorterPager({container: pager});\n\n	$(pager).css({position: \'relative\', top: \'1px\'});\n\n	$(".mainbar tbody tr:odd").addClass("odd");\n});\n	\n\n';
}

output += '\n\n\n/* Common Stuff to form and list */\nfunction PrintInvoice(id){\n\n	if (!id) {\n  		id = $("div.mainbar form").find("input[name=id]").val();\n	}\n 	window.location.href = "';
//line 328 "sale/js"
output += stash.get(['c', 0, 'uri_for', [ '/sale/publish/' ]]);
output += '" + id;\n	return false;\n\n}\nfunction DeleteInvoice(id){\n\n	if (!id) {\n  		id = $("div.mainbar form").find("input[name=id]").val();\n	}\n\n	if ( id && confirm("Sure  you want to delete Invoice no " + id + " ?") ) {\n 			\n 	$.post("';
//line 340 "sale/js"
output += stash.get(['c', 0, 'uri_for', [ '/sale/delete/' ]]);
output += '" + id , function(json_data, status) {\n 				\n 		if (!json_data[\'error\']) \n 					$().message("Delete Successful");\n 			});\n 		}\n 		\n}\n\nfunction CancelInvoice(id){\n\n    if (!id) {\n\n        id = $("div.mainbar form").find("input[name=id]").val();\n    }\n    if ( id && confirm("Sure  you want to cancel Invoice no " + id + " ?") ) {\n\n\n	$("div.mainbar form").find("input[name=quantity]").val(0);\n        $("div.mainbar form").find("input[name=is_cancelled]").val(1);\n        $("div.mainbar form").submit();\n    }\n\n}\n\n\n\n';
    }
    catch(e) {
        var error = context.set_error(e, output);
        throw(error);
    }

    return output;
}

Jemplate.templateMap['sale/list'] = function(context) {
    if (! context) throw('Jemplate function called without context\n');
    var stash = context.stash;
    var output = '';

    try {
output += '\n<table summary="This table includes examples of as many table elements as possible">\n<caption></caption>\n<colgroup>\n	<col class="colA" />\n	<col class="colB" />\n	<col class="colC" />\n	<col class="colD" />\n	<col class="colE" />\n	<col class="colF" />\n        <col class="colG" />	\n</colgroup>\n<thead>\n	<tr>\n		<th colspan="7" class="table-head">List of Sale Invoice</th>\n	</tr>\n	<tr>\n		<th>Invoice No</th>\n		<th>Buyer</th>\n		<th>Product</th>\n		<th>Quantity</th>\n		<th class="currency">Cenvat</th>\n		<th class="currency">Amount</th>\n		<th >Action</th>\n\n	</tr>\n</thead>\n<tbody>\n        ';
//line 29 "sale/list"
stash.set('total_cenvat', 0);
output += '\n        ';
//line 30 "sale/list"
stash.set('total_amount', 0);
output += '\n        ';
//line 31 "sale/list"
stash.set('total_quantity', 0);
output += '\n		';
//line 38 "sale/list"
if (stash.get('type')) {
output += '\n\n        ';
//line 34 "sale/list"
stash.set('subtotal_cenvat', 0);
output += '\n        ';
//line 35 "sale/list"
stash.set('subtotal_amount', 0);
output += '\n        ';
//line 36 "sale/list"
stash.set('subtotal_quantity', 0);
output += '\n		';
//line 37 "sale/list"
stash.set('prev', '');
output += '\n		';
}

output += '\n\n        ';
//line 69 "sale/list"

// FOREACH 
(function() {
    var list = stash.get('sale_rs');
    list = new Jemplate.Iterator(list);
    var retval = list.get_first();
    var value = retval[0];
    var done = retval[1];
    var oldloop;
    try { oldloop = stash.get('loop') } finally {}
    stash.set('loop', list);
    try {
        while (! done) {
            stash.data['row'] = value;
output += '\n	\n';
//line 42 "sale/list"
// USE
stash.set('date', context.plugin('date', []));
output += '\n';
//line 43 "sale/list"
stash.set('to_date', stash.get(['row', 0, 'invoice_date', 0]));
output += '\n';
//line 44 "sale/list"
stash.set('manip', stash.get(['date', 0, 'manip', 0]));
output += '\n';
//line 45 "sale/list"
stash.set('invoice_date', stash.get(['manip', 0, 'UnixDate', [ stash.get(['manip', 0, 'ParseDate', [ stash.get('to_date') ]]), '%d-%m-%Y' ]]));
output += '\n	\n	';
//line 51 "sale/list"
if (stash.get(['c', 0, 'req', 0, 'param', [ 'is_cancelled' ]])) {
output += '\n		';
//line 48 "sale/list"
if (!(stash.get(['row', 0, 'is_cancelled', 0]))) {
  retval = list.get_next();
  value = retval[0];
  done = retval[1];
  continue;

}

output += '\n	';
}
else {
output += '\n		';
//line 50 "sale/list"
if (stash.get(['row', 0, 'is_cancelled', 0])) {
  retval = list.get_next();
  value = retval[0];
  done = retval[1];
  continue;

}

output += '\n	';
}

output += '\n\n        <tr >\n            <td>';
//line 54 "sale/list"
output += stash.get(['row', 0, 'invoice_no', 0]);
output += '/';
//line 54 "sale/list"
output += stash.get('invoice_date');
output += '</td>\n            <td>';
//line 55 "sale/list"
output += stash.get(['row', 0, 'consignee', 0, 'name', 0]);
output += '</td>\n            <td>';
//line 56 "sale/list"
output += stash.get(['row', 0, 'product', 0, 'name', 0]);
output += '</td>\n            <td>';
//line 57 "sale/list"
output += stash.get(['row', 0, 'quantity', 0]);
output += ' ';
//line 57 "sale/list"
output += stash.get(['row', 0, 'uom', 0]);
output += '</td>\n            <th class="currency">';
//line 58 "sale/list"
output += stash.get(['row', 0, 'cenvat', 0]);
output += '</th>\n            <th class="currency">';
//line 59 "sale/list"
output += stash.get(['row', 0, 'total_invoice_amount', 0]);
output += '</th>\n            <th ></span>\n            <a href="';
//line 1 "sale/list"
output += stash.get(['c', 0, 'uri_for', [ '/sale/get/' + stash.get(['row', 0, 'id', 0]) ]]);
output += '">&nbsp;Edit</a>\n	    <a href="';
//line 1 "sale/list"
output += stash.get(['c', 0, 'uri_for', [ '/sale/publish/' + stash.get(['row', 0, 'id', 0]) ]]);
output += '">&nbsp;Print</a>\n	    </th>\n        </tr>\n        ';
//line 65 "sale/list"
stash.set('total_cenvat', stash.get('total_cenvat') + stash.get(['row', 0, 'cenvat', 0]));
output += '\n        ';
//line 66 "sale/list"
stash.set('total_amount', stash.get('total_amount') + stash.get(['row', 0, 'total_invoice_amount', 0]));
output += '\n        ';
//line 67 "sale/list"
stash.set('total_quantity', stash.get('total_quantity') + stash.get(['row', 0, 'quantity', 0]));
output += '\n	\n	';;
            retval = list.get_next();
            value = retval[0];
            done = retval[1];
        }
    }
    catch(e) {
        throw(context.set_error(e, output));
    }
    stash.set('loop', oldloop);
})();

output += '\n \n</tbody>\n<tfoot>\n	<tr class="total">\n		<th>Total</th>\n		<td></td>\n		<td></td>\n		<td></td>\n		<th class="currency">';
//line 78 "sale/list"
output += stash.get('total_cenvat');
output += '</th>\n		<th class="currency">';
//line 79 "sale/list"
output += stash.get('total_amount');
output += '</th>\n		<th ></th>\n	</tr>\n</tfoot>\n\n</table>\n\n';
    }
    catch(e) {
        var error = context.set_error(e, output);
        throw(error);
    }

    return output;
}

Jemplate.templateMap['sale/multi_item_form'] = function(context) {
    if (! context) throw('Jemplate function called without context\n');
    var stash = context.stash;
    var output = '';

    try {
output += '<style>\n/* form wizards \n------------------------------------------------*/\n\n\n.prev, .next { background-color:#b0232a; padding:5px 10px; color:#fff; text-decoration:none; margin-top:5px;margin-bottom:5px;}\n\n.prev:hover, .next:hover { background-color:#000; text-decoration:none;}\n\n.prev { float:left;}\n\n.next { float:right;}\n\n#steps { list-style:none; width:100%; overflow:hidden; margin:0px; padding:0px;}\n\n#steps li {font-size:16px; float:left; padding:1px; color:#b0b1b3;}\n\n#steps li span {font-size:11px; display:block;}\n\n#steps li.current { color:#000;}\n\n#steps li.ButtonPanel {\n	padding:0px;\n	font-size:10px;\n}\n\n#steps li.ButtonPanel a.Buttons {\n	\n	font-size:10px;\n	float:right;\n}\n\n</style>\n<h2>\n<a href="#" id="toggle-forms">Sales Invoice</a>\n</h2>\n<form action="';
//line 37 "sale/multi_item_form"
output += stash.get(['c', 0, 'uri_for', [ '/sale/put' ]]);
output += '" method="POST" class="wizard">\n	<input type=hidden name="id" value="';
//line 38 "sale/multi_item_form"
output += stash.get(['sale', 0, 'id', 0]);
output += '"/>\n    <input type=hidden name="purchase_id" value="';
//line 39 "sale/multi_item_form"
output += stash.get(['sale', 0, 'purchase_id', 0]);
output += '" />\n    <input type=hidden name="is_cancelled" value="';
//line 40 "sale/multi_item_form"
output += stash.get(['sale', 0, 'is_cancelled', 0]);
output += '" />\n    <fieldset class="login" >\n		<legend>Invoice Details</legend>\n        <div class="grid_5 box" >\n		<p>\n			<label>Invoice Type: </label>\n			<select id="invoice_type" name="invoice_type" ';
//line 46 "sale/multi_item_form"
if (stash.get(['sale', 0, 'id', 0])) {
output += 'disabled="true"';
}

output += '>\n                ';
//line 47 "sale/multi_item_form"
output += context.process('sale/select', { 'match': stash.get(['sale', 0, 'invoice_type', 0]) });
output += '\n            </select>\n		</p>\n		<p>\n			<label>Excise Invoice No: </label>\n			<span id="invocie_no">';
//line 53 "sale/multi_item_form"
output += stash.get(['sale', 0, 'invoice_no', 0]) || stash.get('next_invoice_no');
output += '</span>\n		</p>\n\n		<p>\n			<label>Excise Invoice Date: </label>\n			<input type="text" name="invoice_date" value="';
//line 58 "sale/multi_item_form"
output += stash.get(['sale', 0, 'invoice_date', 0]);
output += '" class="required"/>\n		</p>\n		<p>\n			<label>Invoice Time: </label>\n			<input type="text" name="invoice_time" value="';
//line 62 "sale/multi_item_form"
output += stash.get(['sale', 0, 'invoice_time', 0]);
output += '" />\n		</p>		\n		<p>\n			<label>Comm Invoice No: </label> \n			<input type="text" name="comm_invoice_no" value="';
//line 66 "sale/multi_item_form"
output += stash.get(['sale', 0, 'comm_invoice_no', 0]);
output += '" />\n				\n		</p>\n		</div><!-- grid_5 -->\n        <div class="grid_5 box" >\n		<p>\n			<label>Challan No: </label>\n			<input type="text" name="challan_no" value="';
//line 73 "sale/multi_item_form"
output += stash.get(['sale', 0, 'challan_no', 0]);
output += '" />\n		</p>\n		<p>\n			<label>Challan Date: </label>\n			<input type="text" name="challan_date" value="';
//line 77 "sale/multi_item_form"
output += stash.get(['sale', 0, 'challan_date', 0]);
output += '" />\n		</p>\n		<p>\n			<label>Order No: </label>\n			<input type="text" name="order_no" value="';
//line 81 "sale/multi_item_form"
output += stash.get(['sale', 0, 'order_no', 0]);
output += '" />\n		</p>\n		<p>\n			<label>Order Date: </label>\n			<input type="text" name="order_date" value="';
//line 85 "sale/multi_item_form"
output += stash.get(['sale', 0, 'order_date', 0]);
output += '" />\n		</p>\n        <p>\n			<label>Removal Date: </label>\n			<input type="text" name="removal_date" value="';
//line 89 "sale/multi_item_form"
output += stash.get(['sale', 0, 'removal_date', 0]);
output += '"/>\n		</p>\n		\n		<p>\n			<label>Removal Time: </label>\n			<input type="text" name="removal_time" value="';
//line 94 "sale/multi_item_form"
output += stash.get(['sale', 0, 'removal_time', 0]);
output += '"/>\n			<span class="help">for eg. 2:45 pm</span>\n		</p>\n\n		        </div><!-- grid_5 -->\n	</fieldset>\n\n    <fieldset >\n        <legend>Buyer Details</legend>\n        <div class="grid_5 box"> <!-- grid_5 -->\n        <p>\n            <label>Buyer: </label>\n            <select name="buyer_id" class="required">\n            <option value="">Select Buyer</option>\n                ';
//line 108 "sale/multi_item_form"
output += context.process('company/select', { 'match': stash.get(['sale', 0, 'buyer_id', 0]) });
output += '\n            </select>\n            \n            <span class="help add_company" > Not found ? Click here to add</span>\n        </p>\n        <p>\n            <label>Consignee: </label>\n            <select name="consignee_id" class="required">\n            <option value="">Select Consignee</option>\n                ';
//line 118 "sale/multi_item_form"
output += context.process('company/select', { 'match': stash.get(['sale', 0, 'consignee_id', 0]) });
output += '\n                        \n            </select>\n            \n            <span class="help add_company" > Not found ? Click here to add</span>\n        </p>\n    </div>\n    <div class="grid_5 box"> <!-- grid_5 -->\n        <p>\n            <label>Units of Measurement: </label>\n            <input type="text" name="uom" value="';
//line 129 "sale/multi_item_form"
output += stash.get(['sale', 0, 'uom', 0]);
output += '" class="required" readonly=true/>\n        </p>\n        <p>\n            <label>Balance Quantity :<span id="balance_quantity">';
//line 132 "sale/multi_item_form"
if (stash.get(['sale', 0, 'purchase_id', 0])) {
//line 132 "sale/multi_item_form"
output += stash.get(['sale', 0, 'purchase', 0, 'quantity', 0]);
}

output += '</span> out of <span id="purchase_quantity">';
//line 132 "sale/multi_item_form"
if (stash.get(['sale', 0, 'purchase_id', 0])) {
//line 132 "sale/multi_item_form"
output += stash.get(['sale', 0, 'purchase', 0, 'quantity', 0]);
}

output += '</span> &nbsp;<span id="uom">';
//line 132 "sale/multi_item_form"
output += stash.get(['sale', 0, 'purchase', 0, 'uom', 0]);
output += '</span></label>\n        </p>\n        <p>\n            <label>Supplier Type: <span id="supplier_type">';
//line 135 "sale/multi_item_form"
output += stash.get(['sale', 0, 'purchase', 0, 'supplier_type', 0]);
output += '</span></label>\n        </p>\n        <p>\n            <label>Assessble Value: <span id="assessable_value">';
//line 138 "sale/multi_item_form"
output += stash.get(['sale', 0, 'purchase', 0, 'assessable_value', 0]) || 0;
output += '</span></label>\n        </p>\n\n        <p>\n            <label>Suplier Info: <span id="supplier_info" class=\'{ "purchase_id" : "';
//line 142 "sale/multi_item_form"
output += stash.get(['sale', 0, 'purchase_id', 0]);
output += '"}\'>Invoice No ';
//line 142 "sale/multi_item_form"
output += stash.get(['sale', 0, 'purchase', 0, 'invoice_no', 0]);
output += ', ';
//line 142 "sale/multi_item_form"
output += stash.get(['sale', 0, 'purchase', 0, 'invoice_date', 0]);
output += '</span></label>\n        </p>\n        </div> <!-- grid5 -->\n    </fieldset>\n    \n	<fieldset >\n		<legend>Bill of Material</legend>\n        <div class="grid_12 " >\n            <table width="100%">\n              <tbody>\n                <tr>\n                  <td class="grid_2">Product</td>\n                  <td class="grid_1">Rate</td>\n                  <td class="grid_1">Quantity</td>\n                  <td class="grid_1">Tax Rate</td>\n\n                  <td class="grid_1">Tax </td>\n                  <td class="grid_1">Discount</td>\n                  <td class="grid_1">Amount (Rs.)</td>\n                </tr>\n              </tbody>\n            </table>\n		\n        </div><!-- grid_5 -->\n\n	</fieldset>\n    <fieldset >\n        <legend>Transport & Summary</legend>\n        <div class="grid_5 box"> <!-- grid_5 -->\n        <p>\n            <label>LR No: </label>\n            <input type="text" name="lr_no" value="';
//line 173 "sale/multi_item_form"
output += stash.get(['sale', 0, 'lr_no', 0]);
output += '" >\n        </p>\n        <p>\n            <label>Batch No: </label>\n            <input type="text" name="batch_no" value="';
//line 177 "sale/multi_item_form"
output += stash.get(['sale', 0, 'batch_no', 0]);
output += '" />\n        </p>\n        <p>\n            <label>Vehicle No: </label>\n            <input type="text" name="vehicle_no" value="';
//line 181 "sale/multi_item_form"
output += stash.get(['sale', 0, 'vehicle_no', 0]);
output += '" />\n        </p>\n        <p>\n            <label>Mode of Transport: </label>\n            <select name="transport_mode">\n                <option value="">Select Mode of Transport</option>\n                <option value="Road">Road</option>\n                <option value="Rail">Rail</option>\n                <option value="Air">Air</option>\n                <option value="Ship">Ship</option>\n            </select>\n        </p>\n        <p>\n            <label>Transporter Name: </label>\n            <input type="text" name="transporter_name" value="';
//line 195 "sale/multi_item_form"
output += stash.get(['sale', 0, 'transporter_name', 0]);
output += '" />\n        </p>\n        </div>\n        <div class="grid_5 box"> <!-- grid_5 -->\n        <p>\n            <label>Summary: </label>\n            <textarea name=summary>';
//line 201 "sale/multi_item_form"
output += stash.get(['sale', 0, 'summary', 0]);
output += '</textarea>\n        </p>\n        <p>\n			<label>Total Amount: </label>\n			<input type="text" name="total_invoice_amount" value="';
//line 205 "sale/multi_item_form"
output += stash.get(['sale', 0, 'total_invoice_amount', 0]);
output += '"/>\n		</p>\n\n\n    </div> <!-- grid_5 -->\n    </fieldset>\n<!--\n		<button class="button" type=submit id="SaveButton">Save</button>\n		<button class="button" type=reset>Cancel</button>\n		<span class="button hide" id=recalculate >Recalcualte</span>\n        ';
//line 218 "sale/multi_item_form"
if (stash.get(['sale', 0, 'id', 0])) {
output += '\n		<a class="button" href="';
//line 1 "sale/multi_item_form"
output += stash.get(['c', 0, 'uri_for', [ '/sale/publish/' + stash.get(['sale', 0, 'id', 0]) ]]);
output += '" >Export to pdf</a>\n		<button class="button" type=reset>Email</button>\n        ';
}

output += '\n-->\n</form>\n\n\n';
    }
    catch(e) {
        var error = context.set_error(e, output);
        throw(error);
    }

    return output;
}

Jemplate.templateMap['sale/pdf_invoice.tt'] = function(context) {
    if (! context) throw('Jemplate function called without context\n');
    var stash = context.stash;
    var output = '';

    try {
//line 1 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prMbox', [ 0, 0, 595, 842 ]]);
output += '\n';
//line 2 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prFont', [ 'Arial' ]]);
output += '\n';
//line 3 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prFontSize', [ 8 ]]);
output += '\n';
output += '\n';
output += '\n';
//line 150 "sale/pdf_invoice.tt"

// FOREACH 
(function() {
    var list = [ 'Original for Buyer', 'Duplicate for Transporter', 'Triplicate for Excise', 'Quadrudplicate for Owner' ];
    list = new Jemplate.Iterator(list);
    var retval = list.get_first();
    var value = retval[0];
    var done = retval[1];
    var oldloop;
    try { oldloop = stash.get('loop') } finally {}
    stash.set('loop', list);
    try {
        while (! done) {
            stash.data['heading'] = value;
output += '\n';
output += '\n\n';
//line 148 "sale/pdf_invoice.tt"
if (stash.get(['sale', 0, 'invoice_no', 0])) {
output += '\n';
output += '\n';
//line 11 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 450, 805, stash.get('heading') ]]);
output += '\n';
//line 12 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prForm', [ 'pdf/Excise_Invoice.pdf' ]]);
output += '\n\n    ';
//line 14 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 110, 431.5, stash.get(['sale', 0, 'lr_no', 0]) ]]);
output += '\n    ';
//line 15 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 96, 477, stash.get(['sale', 0, 'transport_mode', 0]) ]]);
output += '\n    ';
//line 16 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 110, 454, stash.get(['sale', 0, 'vehicle_no', 0]) ]]);
output += '\n    ';
//line 17 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 460, 755, stash.get(['sale', 0, 'invoice_date', 0]) ]]);
output += '\n    ';
//line 18 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 460, 744, stash.get(['sale', 0, 'invoice_time', 0]) ]]);
output += '\n    ';
//line 19 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 115, 543.5, stash.get(['sale', 0, 'removal_date', 0]) ]]);
output += '\n    ';
//line 20 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 115, 521, stash.get(['sale', 0, 'removal_time', 0]) ]]);
output += '\n    ';
//line 21 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 460, 777, stash.get(['sale', 0, 'invoice_no', 0]) ]]);
output += '\n    ';
//line 22 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 460, 766, stash.get(['sale', 0, 'comm_invoice_no', 0]) ]]);
output += '\n    ';
//line 27 "sale/pdf_invoice.tt"
if (stash.get(['sale', 0, 'invoice_type', 0]) == 2 || stash.get(['sale', 0, 'invoice_type', 0]) == 3) {
output += '\n    ';
//line 24 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 470, 766, 'Tax' ]]);
output += '\n    ';
}
else if (stash.get(['sale', 0, 'invoice_type', 0]) == 4 || stash.get(['sale', 0, 'invoice_type', 0]) == 5) {
output += '\n    ';
//line 26 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 470, 766, 'Retail' ]]);
output += '\n    ';
}

output += '\n    ';
//line 28 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 64, 20, stash.get(['sale', 0, 'invoice_date', 0]) ]]);
output += '\n    ';
//line 29 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 17, 600, stash.get(['sale', 0, 'product', 0, 'name', 0]) ]]);
output += '\n    ';
//line 30 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 460, 733, stash.get(['sale', 0, 'purchase', 0, 'id', 0]) ]]);
output += '\n    ';
//line 31 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 460, 723, stash.get(['sale', 0, 'purchase', 0, 'id', 0]) ]]);
output += '\n    ';
//line 32 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 300, 600, stash.get(['sale', 0, 'quantity', 0]) ]]);
output += '\n    ';
//line 33 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 356, 600, stash.get(['sale', 0, 'rate', 0]) ]]);
output += '\n    ';
//line 34 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 215, 600, stash.get(['sale', 0, 'product', 0, 'chapter_heading', 0]) ]]);
output += '\n    ';
//line 35 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 418.5, 382, stash.get(['sale', 0, 'excise', 0, 'cenvat', 0])  + '%' ]]);
output += '\n    ';
//line 38 "sale/pdf_invoice.tt"
if (stash.get(['purchase', 0, 'excise', 0, 'cvd', 0])) {
output += '\n    ';
//line 37 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 518, 370, stash.get(['sale', 0, 'excise', 0, 'cvd', 0])  + '%' ]]);
output += '\n    ';
}

output += '\n    ';
//line 39 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 418, 370, stash.get(['sale', 0, 'excise', 0, 'hs_edu_cess', 0])  + '%' ]]);
output += '\n    ';
//line 40 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 518, 382, stash.get(['sale', 0, 'excise', 0, 'sec_edu_cess', 0])  + '%' ]]);
output += '\n    ';
//line 41 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 435.5, 546, stash.get(['sale', 0, 'vat', 0, 'form_type', 0]) ]]);
output += '\n    ';
//line 44 "sale/pdf_invoice.tt"
if (stash.get(['sale', 0, 'vat', 0, 'sales_tax', 0])) {
output += '\n    ';
//line 43 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 446, 532, stash.get(['sale', 0, 'vat', 0, 'sales_tax', 0])  + '%' ]]);
output += '\n    ';
}

output += '\n    ';
//line 47 "sale/pdf_invoice.tt"
if (stash.get(['sale', 0, 'vat', 0, 'addl_sales_tax', 0])) {
output += '\n    ';
//line 46 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 446, 516, stash.get(['sale', 0, 'vat', 0, 'addl_sales_tax', 0])  + '%' ]]);
output += '\n    ';
}

output += '\n    ';
//line 48 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 486, 532, stash.get(['sale', 0, 'sales_tax', 0]) ]]);
output += '\n    ';
//line 49 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 486, 516, stash.get(['sale', 0, 'addl_sales_tax', 0]) ]]);
output += '\n    ';
//line 50 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 486, 214, stash.get(['sale', 0, 'cvd', 0]) ]]);
output += '\n    ';
//line 51 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 483, 310.5, stash.get(['sale', 0, 'sec_edu_cess', 0]) ]]);
output += '\n    ';
//line 52 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 486, 262.5, stash.get(['sale', 0, 'hs_edu_cess', 0]) ]]);
output += '\n    ';
//line 53 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 486, 486, stash.get(['sale', 0, 'total_invoice_amount', 0]) ]]);
output += '\n    ';
//line 54 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 485, 359.5, stash.get(['sale', 0, 'cenvat', 0]) ]]);
output += '\n    ';
//line 55 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 275, 347, stash.get(['purchase', 0, 'm_cenvat', 0]) ]]);
output += '\n    ';
//line 56 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 62, 229, stash.get(['purchase', 0, 'invoice_no', 0]) ]]);
output += '\n    ';
//line 57 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 85, 217, stash.get(['purchase', 0, 'rg_page_no', 0]) ]]);
output += '\n    ';
//line 58 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 144, 217, stash.get(['purchase', 0, 'page_no', 0]) ]]);
output += '\n    ';
//line 59 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 17, 696, stash.get(['sale', 0, 'consignee', 0, 'name', 0]) ]]);
output += '\n    ';
//line 60 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 72, 655, stash.get(['sale', 0, 'consignee', 0, 'ecc', 0]) ]]);
output += '\n    ';
//line 61 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 41.5, 644, stash.get(['sale', 0, 'consignee', 0, 'range', 0]) ]]);
output += '\n    ';
//line 62 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 120, 644, stash.get(['sale', 0, 'consignee', 0, 'division', 0]) ]]);
output += '\n    ';
//line 63 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 200, 655, stash.get(['sale', 0, 'consignee', 0, 'vat_tin_no', 0]) ]]);
output += '\n    ';
//line 64 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 230.5, 644, stash.get(['sale', 0, 'consignee', 0, 'commissionerate', 0]) ]]);
output += '\n    ';
//line 65 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 244, 505.5, stash.get(['purchase', 0, 'manufacturer', 0, 'ecc', 0]) ]]);
output += '\n    ';
//line 66 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 202, 494, stash.get(['purchase', 0, 'manufacturer', 0, 'range', 0]) ]]);
output += '\n    ';
//line 67 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 190, 481.5, stash.get(['purchase', 0, 'manufacturer', 0, 'division', 0]) ]]);
output += '\n    ';
//line 68 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 295, 481.5, stash.get(['purchase', 0, 'manufacturer', 0, 'commissionerate', 0]) ]]);
output += '\n    ';
//line 69 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 244, 470, stash.get(['purchase', 0, 'm_invoice_no', 0]) ]]);
output += '\n    ';
//line 70 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 254, 459, stash.get(['purchase', 0, 'product', 0, 'name', 0]) ]]);
output += '\n    ';
//line 71 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 254, 449, stash.get(['purchase', 0, 'product', 0, 'chapter_heading', 0]) ]]);
output += '\n    ';
//line 72 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 235, 425, stash.get(['purchase', 0, 'm_quantity', 0]) ]]);
output += '\n    ';
//line 73 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 275, 414.6, stash.get(['purchase', 0, 'm_assessable_value', 0]) ]]);
output += '\n    ';
//line 74 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 212, 370, stash.get(['purchase', 0, 'excise', 0, 'cenvat', 0])  + '%' ]]);
output += '\n    ';
//line 75 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 316, 370, stash.get(['purchase', 0, 'excise', 0, 'sec_edu_cess', 0])  + '%' ]]);
output += '\n    ';
//line 76 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 212, 357, stash.get(['purchase', 0, 'excise', 0, 'hs_edu_cess', 0])  + '%' ]]);
output += '\n    ';
//line 79 "sale/pdf_invoice.tt"
if (stash.get(['purchase', 0, 'excise', 0, 'cvd', 0])) {
output += '\n    ';
//line 78 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 316, 357, stash.get(['purchase', 0, 'excise', 0, 'cvd', 0])  + '%' ]]);
output += '\n    ';
}

output += '\n    ';
//line 80 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 280, 205, stash.get(['purchase', 0, 'm_cvd', 0]) ]]);
output += '\n    ';
//line 81 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 280, 301.5, stash.get(['purchase', 0, 'm_sec_edu_cess', 0]) ]]);
output += '\n    ';
//line 82 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 280, 253.5, stash.get(['purchase', 0, 'm_hs_edu_cess', 0]) ]]);
output += '\n    ';
//line 83 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 172, 554.5, stash.get(['purchase', 0, 'manufacturer', 0, 'name', 0]) ]]);
output += '\n    ';
//line 84 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 17, 360, stash.get(['purchase', 0, 'supplier', 0, 'name', 0]) ]]);
output += '\n    ';
//line 85 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 80, 278.5, stash.get(['purchase', 0, 'supplier', 0, 'ecc', 0]) ]]);
output += '\n    ';
//line 86 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 48, 263, stash.get(['purchase', 0, 'supplier', 0, 'range', 0]) ]]);
output += '\n    ';
//line 87 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 380, 335, stash.get(['sale', 0, 'custom', 0, 'words', 0, 'cenvat', 0]) ]]);
output += '\n    ';
//line 88 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 379, 191, stash.get(['sale', 0, 'custom', 0, 'words', 0, 'cvd', 0]) ]]);
output += '\n    ';
//line 89 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 379, 288, stash.get(['sale', 0, 'custom', 0, 'words', 0, 'sec_edu_cess', 0]) ]]);
output += '\n    ';
//line 90 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 379, 239, stash.get(['sale', 0, 'custom', 0, 'words', 0, 'hs_edu_cess', 0]) ]]);
output += '\n    ';
//line 91 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 378, 458, stash.get(['sale', 0, 'custom', 0, 'words', 0, 'total_invoice_amount', 0]) ]]);
output += '\n    ';
//line 92 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 173, 230, stash.get(['sale', 0, 'custom', 0, 'words', 0, 'm_hs_edu_cess', 0]) ]]);
output += '\n    ';
//line 93 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 173, 278, stash.get(['sale', 0, 'custom', 0, 'words', 0, 'm_sec_edu_cess', 0]) ]]);
output += '\n    ';
//line 94 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 173, 181, stash.get(['sale', 0, 'custom', 0, 'words', 0, 'm_cvd', 0]) ]]);
output += '\n    ';
//line 95 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 173, 325, stash.get(['sale', 0, 'custom', 0, 'words', 0, 'm_cenvat', 0]) ]]);
output += '\n    ';
//line 96 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 173, 392.5, stash.get(['sale', 0, 'custom', 0, 'words', 0, 'm_assessable_value', 0]) ]]);
output += '\n    ';
//line 97 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 105, 583, stash.get(['sale', 0, 'credit_days', 0]) ]]);
output += '\n    ';
//line 98 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 96, 500, stash.get(['sale', 0, 'documents_through', 0]) ]]);
output += '\n    ';
//line 99 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 442, 600, stash.get(['sale', 0, 'uom', 0]) ]]);
output += '\n    ';
//line 100 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 484, 600, stash.get(['sale', 0, 'taxable_value', 0]) ]]);
output += '\n   ';
//line 116 "sale/pdf_invoice.tt"
if (stash.get(['sale', 0, 'consignee', 0, 'name', 0]) == stash.get(['sale', 0, 'buyer', 0, 'name', 0])) {
output += '\n   \n      ';
//line 103 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 17, 683, stash.get(['sale', 0, 'consignee', 0, 'w_address_1', 0])  + ','  + stash.get(['sale', 0, 'consignee', 0, 'w_address_2', 0]) ]]);
output += '\n      ';
//line 104 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 17, 670, stash.get(['sale', 0, 'consignee', 0, 'w_city', 0])  + ','  + stash.get(['sale', 0, 'consignee', 0, 'w_state', 0])  + ','  + stash.get(['sale', 0, 'consignee', 0, 'w_country', 0]) ]]);
output += '\n   \n   ';
}
else {
output += '   \n\n      ';
//line 108 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 17, 683, stash.get(['sale', 0, 'consignee', 0, 'w_address_1', 0])  + ','  + stash.get(['sale', 0, 'consignee', 0, 'w_address_2', 0]) ]]);
output += '\n      ';
//line 109 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 17, 670, stash.get(['sale', 0, 'consignee', 0, 'w_city', 0])  + ','  + stash.get(['sale', 0, 'consignee', 0, 'w_state', 0])  + ','  + stash.get(['sale', 0, 'consignee', 0, 'w_country', 0]) ]]);
output += '\n      ';
//line 110 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 350, 696, stash.get(['sale', 0, 'buyer', 0, 'name', 0]) ]]);
output += '\n      ';
//line 111 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 350, 659.5, stash.get(['sale', 0, 'buyer', 0, 'vat_tin_no', 0]) ]]);
output += '      \n      ';
//line 112 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 350, 683, stash.get(['sale', 0, 'buyer', 0, 'w_address_1', 0])  + ','  + stash.get(['sale', 0, 'buyer', 0, 'w_address_2', 0]) ]]);
output += '\n      ';
//line 113 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 350, 670, stash.get(['sale', 0, 'buyer', 0, 'w_city', 0])  + ','  + stash.get(['sale', 0, 'buyer', 0, 'w_state', 0])  + ','  + stash.get(['sale', 0, 'buyer', 0, 'w_country', 0]) ]]);
output += '\n      ';
//line 114 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 325, 645, stash.get(['sale', 0, 'buyer', 0, 'division', 0]) ]]);
output += '\n      ';
//line 115 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 475, 645, stash.get(['sale', 0, 'buyer', 0, 'vat_tin_date', 0]) ]]);
output += '\n   ';
}

output += '\n   \n      ';
//line 118 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 17, 344, stash.get(['purchase', 0, 'supplier', 0, 'w_address_1', 0])  + ','  + stash.get(['purchase', 0, 'supplier', 0, 'w_address_2', 0]) ]]);
output += '\n      ';
//line 119 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 17, 331, stash.get(['purchase', 0, 'supplier', 0, 'w_city', 0])  + ','  + stash.get(['purchase', 0, 'supplier', 0, 'w_state', 0])  + ','  + stash.get(['purchase', 0, 'supplier', 0, 'w_country', 0]) ]]);
output += '\n      ';
//line 120 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 172, 541, stash.get(['purchase', 0, 'manufacturer', 0, 'w_address_1', 0])  + ','  + stash.get(['purchase', 0, 'manufacturer', 0, 'w_address_2', 0]) ]]);
output += '\n      ';
//line 121 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 172, 530, stash.get(['purchase', 0, 'manufacturer', 0, 'w_city', 0])  + ','  + stash.get(['purchase', 0, 'manufacturer', 0, 'w_state', 0])  + ','  + stash.get(['purchase', 0, 'manufacturer', 0, 'w_country', 0]) ]]);
output += '\n      ';
output += '\n      ';
output += '\n      ';
output += '\n   ';
//line 141 "sale/pdf_invoice.tt"
if (stash.get(['purchase', 0, 'supplier_type', 0]) == 'Manufacturer') {
output += '\n      \n      ';
//line 127 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 28, 110, stash.get(['purchase', 0, 'manufacturer', 0, 'name', 0]) ]]);
output += '\n      ';
output += '\n      ';
output += '\n   ';
}
else if (stash.get(['purchase', 0, 'supplier_type', 0]) == 'Importer') {
output += '\n      \n      ';
//line 132 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 437.5, 84.5, stash.get(['purchase', 0, 'manufacturer', 0, 'name', 0]) ]]);
output += '\n      ';
output += '\n      ';
output += '\n   ';
}
else {
output += '\n      \n      ';
//line 137 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 254, 69, stash.get(['purchase', 0, 'supplier', 0, 'name', 0]) ]]);
output += '\n      ';
//line 138 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 254, 56.6, stash.get(['purchase', 0, 'manufacturer', 0, 'name', 0]) ]]);
output += '\n      ';
output += '\n      ';
output += '\n   ';
}

output += '\n   \n    ';
//line 147 "sale/pdf_invoice.tt"
if (stash.get(['sale', 0, 'is_cancelled', 0])) {
output += '\n        ';
//line 144 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prFontSize', [ 100 ]]);
output += '\n        ';
//line 145 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 100, 100, 'CANCELLED', 'left', 60 ]]);
output += '\n        ';
//line 146 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prFontSize', [ 8 ]]);
output += '\n    ';
}

output += '\n';
}

output += '\n';
//line 149 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prPage', 0]);
output += '\n';;
            retval = list.get_next();
            value = retval[0];
            done = retval[1];
        }
    }
    catch(e) {
        throw(context.set_error(e, output));
    }
    stash.set('loop', oldloop);
})();

output += '\n';
//line 151 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prFontSize', [ 8 ]]);
output += '\n';
//line 196 "sale/pdf_invoice.tt"

// FOREACH 
(function() {
    var list = [ 'Original', 'Duplicate' ];
    list = new Jemplate.Iterator(list);
    var retval = list.get_first();
    var value = retval[0];
    var done = retval[1];
    var oldloop;
    try { oldloop = stash.get('loop') } finally {}
    stash.set('loop', list);
    try {
        while (! done) {
            stash.data['heading'] = value;
output += '\n';
//line 153 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prMbox', [ 0, 0, 595, 842 ]]);
output += '\n';
//line 195 "sale/pdf_invoice.tt"
if (stash.get(['sale', 0, 'comm_invoice_no', 0]) && stash.get(['sale', 0, 'is_cancelled', 0]) == '') {
output += '\n';
//line 155 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prPage', 0]);
output += '\n';
output += '\n';
//line 157 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prMbox', [ 0, 0, 595, 842 ]]);
output += '\n';
//line 158 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 440, 808, stash.get('heading') ]]);
output += '\n';
//line 159 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prForm', [ 'pdf/Comm_Invoice.pdf' ]]);
output += '\n    ';
//line 164 "sale/pdf_invoice.tt"
if (stash.get(['sale', 0, 'invoice_type', 0]) == 2 || stash.get(['sale', 0, 'invoice_type', 0]) == 3) {
output += '\n    ';
//line 161 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 300, 734, 'Tax Invoice' ]]);
output += '\n    ';
}
else if (stash.get(['sale', 0, 'invoice_type', 0]) == 4 || stash.get(['sale', 0, 'invoice_type', 0]) == 5) {
output += '\n    ';
//line 163 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 300, 734, 'Retail Invoice' ]]);
output += '\n    ';
}

output += '    \n    ';
//line 165 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 63, 685, stash.get(['sale', 0, 'buyer', 0, 'name', 0]) ]]);
output += '\n    ';
//line 166 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 63, 664, stash.get(['sale', 0, 'buyer', 0, 'w_address_1', 0]) ]]);
output += '\n    ';
//line 167 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 63, 645, stash.get(['sale', 0, 'buyer', 0, 'w_address_2', 0]) ]]);
output += '\n    ';
//line 168 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 63, 625, stash.get(['sale', 0, 'buyer', 0, 'w_city', 0])  + ',', stash.get('w_state')  + ','  + stash.get('w_zip') ]]);
output += '\n    ';
//line 169 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 63, 605, stash.get(['sale', 0, 'buyer', 0, 'w_country', 0]) ]]);
output += '\n    ';
//line 170 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 435, 714, stash.get(['sale', 0, 'comm_invoice_no', 0]) ]]);
output += '\n    ';
//line 171 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 435, 694, stash.get(['sale', 0, 'invoice_date', 0]) ]]);
output += '\n    ';
//line 172 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 435, 671, stash.get(['sale', 0, 'buyer', 0, 'vat_tin_no', 0]) ]]);
output += '\n    ';
//line 173 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 435, 648, stash.get(['sale', 0, 'buyer', 0, 'cst_tin_no', 0]) ]]);
output += '\n    ';
//line 174 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 435, 625, stash.get(['sale', 0, 'order_no', 0]) ]]);
output += '\n    ';
//line 175 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 435, 602, stash.get(['sale', 0, 'transporter_name', 0]) ]]);
output += '\n    ';
//line 176 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 510, 567, stash.get(['sale', 0, 'vat', 0, 'form_type', 0]) ]]);
output += '\n    ';
//line 177 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 85, 501, '1' ]]);
output += '    \n    ';
//line 178 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 104, 501, stash.get(['sale', 0, 'product', 0, 'name', 0]) ]]);
output += '\n    ';
//line 179 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 326, 501, stash.get(['sale', 0, 'quantity', 0]) ]]);
output += '\n    ';
//line 180 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 386, 501, stash.get(['sale', 0, 'rate', 0]) ]]);
output += '\n    ';
//line 181 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 454, 501, stash.get(['sale', 0, 'uom', 0]) ]]);
output += '\n    ';
//line 190 "sale/pdf_invoice.tt"
if (stash.get(['sale', 0, 'vat', 0, 'form_type', 0]) == 'No Form') {
output += '\n    ';
//line 183 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 454, 156, stash.get(['sale', 0, 'vat', 0, 'sales_tax', 0])  + '%' ]]);
output += '\n    ';
//line 184 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 454, 138, stash.get(['sale', 0, 'vat', 0, 'addl_sales_tax', 0])  + '%' ]]);
output += '\n    ';
//line 185 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 490, 156.5, stash.get(['sale', 0, 'sales_tax', 0]) ]]);
output += '    \n    ';
//line 186 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 490, 138.5, stash.get(['sale', 0, 'addl_sales_tax', 0]) ]]);
output += '\n    ';
}
else if (stash.get(['sale', 0, 'vat', 0, 'form_type', 0]) == 'C Form') {
output += '\n    ';
//line 188 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 454, 118, stash.get(['sale', 0, 'vat', 0, 'sales_tax', 0])  + '%' ]]);
output += '\n    ';
//line 189 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 490, 156.5, stash.get(['sale', 0, 'sales_tax', 0]) ]]);
output += '\n    ';
}

output += '\n    ';
//line 191 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 454, 501, stash.get(['sale', 0, 'uom', 0]) ]]);
output += '\n    ';
//line 192 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 490, 501, stash.get(['sale', 0, 'taxable_value', 0]) ]]);
output += '\n    ';
//line 193 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 62, 142, stash.get(['sale', 0, 'custom', 0, 'words', 0, 'total_invoice_amount', 0]) ]]);
output += '\n    ';
//line 194 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 490, 97, stash.get(['sale', 0, 'total_invoice_amount', 0]) ]]);
output += '\n';
}

output += '\n';;
            retval = list.get_next();
            value = retval[0];
            done = retval[1];
        }
    }
    catch(e) {
        throw(context.set_error(e, output));
    }
    stash.set('loop', oldloop);
})();

output += '\n';
output += '\n';
//line 221 "sale/pdf_invoice.tt"

// FOREACH 
(function() {
    var list = [ 'Original', 'Duplicate', 'Triplicate' ];
    list = new Jemplate.Iterator(list);
    var retval = list.get_first();
    var value = retval[0];
    var done = retval[1];
    var oldloop;
    try { oldloop = stash.get('loop') } finally {}
    stash.set('loop', list);
    try {
        while (! done) {
            stash.data['heading'] = value;
output += '\n';
//line 218 "sale/pdf_invoice.tt"
if (stash.get(['sale', 0, 'challan_no', 0]) && stash.get(['sale', 0, 'is_cancelled', 0]) == '') {
output += '\n';
//line 200 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prPage', 0]);
output += '\n';
//line 201 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prMbox', [ 0, 0, 595, 410 ]]);
output += '\n';
//line 202 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 470, 390, stash.get('heading') ]]);
output += '\n';
//line 203 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prForm', [ 'pdf/sale_challan.pdf' ]]);
output += '\n\n    ';
//line 205 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 40, 292, stash.get(['sale', 0, 'consignee', 0, 'name', 0]) ]]);
output += '\n    ';
//line 206 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 40, 280.5, stash.get(['sale', 0, 'consignee', 0, 'w_address_1', 0])  + ','  + stash.get(['sale', 0, 'consignee', 0, 'w_address_2', 0]) ]]);
output += '\n    ';
//line 207 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 40, 269, stash.get(['sale', 0, 'consignee', 0, 'w_city', 0])  + ','  + stash.get('w_state')  + ','  + stash.get('w_zip') ]]);
output += '\n    ';
//line 208 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 127.5, 254, stash.get(['sale', 0, 'consignee', 0, 'vat_tin_no', 0]) ]]);
output += '\n    ';
//line 209 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 306, 254, stash.get(['sale', 0, 'consignee', 0, 'vat_tin_date', 0]) ]]);
output += '\n    ';
//line 210 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 127.5, 242, stash.get(['sale', 0, 'consignee', 0, 'cst_tin_no', 0]) ]]);
output += '\n    ';
//line 211 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 306, 242, stash.get(['sale', 0, 'consignee', 0, 'vat_tin_date', 0]) ]]);
output += '\n    ';
//line 212 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 482, 281, stash.get(['sale', 0, 'challan_no', 0]) ]]);
output += '\n    ';
//line 213 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 482, 242, stash.get(['sale', 0, 'challan_date', 0]) ]]);
output += '\n    ';
//line 214 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 37, 202, '1' ]]);
output += '\n    ';
//line 215 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 59.5, 202, stash.get(['sale', 0, 'product', 0, 'name', 0]) ]]);
output += '\n    ';
//line 216 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 442, 202, stash.get(['sale', 0, 'quantity', 0]) ]]);
output += '\n    ';
//line 217 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prText', [ 516, 202, stash.get(['sale', 0, 'uom', 0]) ]]);
output += '\n';
}

output += '\n\n';
//line 220 "sale/pdf_invoice.tt"
output += stash.get(['pdf', 0, 'prPage', 0]);
output += '\n';;
            retval = list.get_next();
            value = retval[0];
            done = retval[1];
        }
    }
    catch(e) {
        throw(context.set_error(e, output));
    }
    stash.set('loop', oldloop);
})();

    }
    catch(e) {
        var error = context.set_error(e, output);
        throw(error);
    }

    return output;
}

Jemplate.templateMap['sale/recent'] = function(context) {
    if (! context) throw('Jemplate function called without context\n');
    var stash = context.stash;
    var output = '';

    try {
output += '<div class="box" id="list-items">\n\n				<h2>\n					<a href="#" id="toggle-section-menu">Recent Sale Invoices</a>\n				</h2>\n                <p>You can make a duplicate copy from one of the recent invoices </p>\n                <ul class="menu" id="section-menu">\n	';
//line 12 "sale/recent"

// FOREACH 
(function() {
    var list = stash.get(['c', 0, 'model', [ 'DemoDB::Sale' ], 'recent', 0]);
    list = new Jemplate.Iterator(list);
    var retval = list.get_first();
    var value = retval[0];
    var done = retval[1];
    var oldloop;
    try { oldloop = stash.get('loop') } finally {}
    stash.set('loop', list);
    try {
        while (! done) {
            stash.data['invoice'] = value;
output += '\n<li>\n<a href="';
//line 10 "sale/recent"
if (stash.get('duplicate')) {
output += '#';
}
else {
//line 1 "sale/recent"
output += stash.get(['c', 0, 'uri_for', [ '/sale/get/' + stash.get(['invoice', 0, 'id', 0]) ]]);
}

output += '">No. ';
//line 10 "sale/recent"
output += stash.get(['invoice', 0, 'invoice_no', 0]);
output += ' dated ';
//line 10 "sale/recent"
output += stash.get(['invoice', 0, 'invoice_date', 0]);
output += ', ';
//line 10 "sale/recent"
output += stash.get(['invoice', 0, 'buyer', 0, 'name', 0]);
output += ', ';
//line 10 "sale/recent"
output += stash.get(['invoice', 0, 'quantity', 0]);
output += ' MT</a>\n</li>\n	';;
            retval = list.get_next();
            value = retval[0];
            done = retval[1];
        }
    }
    catch(e) {
        throw(context.set_error(e, output));
    }
    stash.set('loop', oldloop);
})();

output += '\n \n               </ul>\n</div>\n';
    }
    catch(e) {
        var error = context.set_error(e, output);
        throw(error);
    }

    return output;
}

Jemplate.templateMap['sale/search'] = function(context) {
    if (! context) throw('Jemplate function called without context\n');
    var stash = context.stash;
    var output = '';

    try {
output += '<div class="box"> <!-- begin form box -->\n<h2>\n		<a href="#" id="toggle-forms">Search Sales</a>\n		';
//line 4 "sale/search"
stash.set('type', stash.get('type') || 0);
output += '\n	</h2>\n	<form action="';
//line 1 "sale/search"
output += stash.get(['c', 0, 'uri_for', [ '/sale/' + stash.get('type') + '/search' ]]);
output += '" class="search" id="forms" method="POST">\n		<fieldset >\n			<p>\n				<label>Invoice No: </label>\n				<input type="text" name="invoice_no" value="" />\n				<span class="help"> for eg. 55-60, to search for range</span>\n			</p>\n			<p>\n				<label>From Date: </label>\n				<input type="text" name="from_date" />\n			</p>\n			<p>\n				<label>To Date: </label>\n				<input type="text" name="to_date" />\n			</p>\n			<p>\n				<label>Consignee: </label>\n				<select name="consignee_id" >\n				<option value=""> Choose Consignee</option>\n				';
//line 25 "sale/search"
output += context.include('company/select');
output += '\n				</select>\n			</p>\n			<p>\n				<label>Product: </label>\n				<select name="product_id" >\n                	<option value=""> Choose Product </option>\n                ';
//line 36 "sale/search"

// FOREACH 
(function() {
    var list = stash.get(['c', 0, 'model', [ 'DemoDB::Product' ], 'all', 0]);
    list = new Jemplate.Iterator(list);
    var retval = list.get_first();
    var value = retval[0];
    var done = retval[1];
    var oldloop;
    try { oldloop = stash.get('loop') } finally {}
    stash.set('loop', list);
    try {
        while (! done) {
            stash.data['product'] = value;
output += '\n                    <option value="';
//line 33 "sale/search"
output += stash.get(['product', 0, 'id', 0]);
output += '" >\n                        ';
//line 34 "sale/search"
output += stash.get(['product', 0, 'name', 0]);
output += '\n                    </option>\n                ';;
            retval = list.get_next();
            value = retval[0];
            done = retval[1];
        }
    }
    catch(e) {
        throw(context.set_error(e, output));
    }
    stash.set('loop', oldloop);
})();

output += '\n                </select>\n			</p>\n			\n			<p>\n				<label>Search Cancelled?: </label>\n				<input type=radio name="is_cancelled" value="1" >Yes</input>\n				<input type=radio name="is_cancelled" value="" checked >No</input>\n			</p>\n			<button class="button" type="submit"> Search Sale Invocies</button>\n		</fieldset>\n	</form>\n</div>\n';
    }
    catch(e) {
        var error = context.set_error(e, output);
        throw(error);
    }

    return output;
}

Jemplate.templateMap['sale/select'] = function(context) {
    if (! context) throw('Jemplate function called without context\n');
    var stash = context.stash;
    var output = '';

    try {
//line 5 "sale/select"

// FOREACH 
(function() {
    var list = [ 'Excise Invoice', 'Taxable Commercial', 'Ecise + Tax Commerical ', 'Retail Commercial', 'Excise + Retail Commercial' ];
    list = new Jemplate.Iterator(list);
    var retval = list.get_first();
    var value = retval[0];
    var done = retval[1];
    var oldloop;
    try { oldloop = stash.get('loop') } finally {}
    stash.set('loop', list);
    try {
        while (! done) {
            stash.data['invoice_type'] = value;
output += '\n    <option value="';
//line 2 "sale/select"
output += stash.get(['loop', 0, 'count', 0]);
output += '" ';
//line 2 "sale/select"
if (stash.get(['loop', 0, 'count', 0]) == stash.get('match')) {
output += ' selected ';
}

output += '>\n        ';
//line 3 "sale/select"
output += stash.get('invoice_type');
output += '\n</option>\n';;
            retval = list.get_next();
            value = retval[0];
            done = retval[1];
        }
    }
    catch(e) {
        throw(context.set_error(e, output));
    }
    stash.set('loop', oldloop);
})();

output += '\n\n';
    }
    catch(e) {
        var error = context.set_error(e, output);
        throw(error);
    }

    return output;
}

Jemplate.templateMap['user/form'] = function(context) {
    if (! context) throw('Jemplate function called without context\n');
    var stash = context.stash;
    var output = '';

    try {
output += '<h2>\n<a href="#" id="toggle-forms">Change password</a>\n</h2>\n<form  action="';
//line 4 "user/form"
output += stash.get(['c', 0, 'uri_for', [ '/user/put' ]]);
output += '" class="new_user" target="user_id" method="POST">\n\n<fieldset >\n<legend>User Information</legend>\n<input type=hidden name="id" value="';
//line 8 "user/form"
output += stash.get(['user', 0, 'id', 0]);
output += '" />\n<input type=hidden id = "oldpassword1" name="oldpassword1" value="';
//line 9 "user/form"
output += stash.get(['user', 0, 'password', 0]);
output += '" />\n<p>\n	<label>name: </label>\n	<input type="text" name="username" value="';
//line 12 "user/form"
output += stash.get(['user', 0, 'username', 0]);
output += '" class="required"/>\n</p>\n<p>\n	<label>Old Password : </label>\n	<input type="password" id ="oldpassword" name="oldpassword"  class="required"/>\n</p>\n<p>\n	<label>New Password : </label>\n	<input type="password" id = "password" name="password"  class="required"/>\n</p>\n<p>\n	<label>Confirm Password : </label>\n	<input type="password" id = "password_again" name="password_again"  class="required"/>\n</p>\n\n<p>\n	<label>Description: </label>\n	<input type="text" name="description" value="';
//line 29 "user/form"
output += stash.get(['user', 0, 'description', 0]);
output += '"/>\n</p>\n<button class="button" type="submit" >Add</button>\n<button class="button" type="reset" >Cancel </button>\n</fieldset>\n\n</form>\n\n';
    }
    catch(e) {
        var error = context.set_error(e, output);
        throw(error);
    }

    return output;
}

Jemplate.templateMap['views/default/artist_edit.tt'] = function(context) {
    if (! context) throw('Jemplate function called without context\n');
    var stash = context.stash;
    var output = '';

    try {
output += '	\n<h2> Edit  Artist No. ';
//line 2 "views/default/artist_edit.tt"
output += stash.get(['artist', 0, 'artistid', 0]);
output += ' ( ';
//line 2 "views/default/artist_edit.tt"
output += stash.get('message');
output += ' )</h2>\n<form action="#/artist/save" method="POST" >\n    <input type=hidden name=artistid value="';
//line 4 "views/default/artist_edit.tt"
output += stash.get(['artist', 0, 'artistid', 0]);
output += '">\n    <div class="grid_5">\n	<fieldset class="login">\n		<legend>Snapshot</legend>\n        <input class="email required" name="name" value="';
//line 8 "views/default/artist_edit.tt"
output += stash.get(['artist', 0, 'name', 0]);
output += '">      \n    </fieldset>\n    </div>\n    <input type=submit value="Hit me"/>\n</form>\n';
    }
    catch(e) {
        var error = context.set_error(e, output);
        throw(error);
    }

    return output;
}

Jemplate.templateMap['views/default/artist_list.tt'] = function(context) {
    if (! context) throw('Jemplate function called without context\n');
    var stash = context.stash;
    var output = '';

    try {
output += '<table >\n    <thead>\n        <tr>\n            <th colspan="7" class="table-head">List of Artists</th>\n        </tr>\n\n        <tr>\n            <th>Id</th>\n            <th>Name</th>\n            <th>Action</th>\n        </tr>\n    </thead>\n    <tbody>\n        ';
//line 24 "views/default/artist_list.tt"

// FOREACH 
(function() {
    var list = stash.get(['artist', 0, 'list', 0]);
    list = new Jemplate.Iterator(list);
    var retval = list.get_first();
    var value = retval[0];
    var done = retval[1];
    var oldloop;
    try { oldloop = stash.get('loop') } finally {}
    stash.set('loop', list);
    try {
        while (! done) {
            stash.data['row'] = value;
output += '\n        <tr>\n            <td>';
//line 16 "views/default/artist_list.tt"
output += stash.get(['row', 0, 'artistid', 0]);
output += '</td>\n            <td>';
//line 17 "views/default/artist_list.tt"
output += stash.get(['row', 0, 'name', 0]);
output += '</td>\n            <th >\n            <a href="#';
//line 1 "views/default/artist_list.tt"
output += '/artist/delete/' + stash.get(['row', 0, 'artistid', 0]);
output += '">Del</a>\n            <a href="#';
//line 1 "views/default/artist_list.tt"
output += '/edit/artist/' + stash.get(['row', 0, 'artistid', 0]);
output += '">Edit</a>\n            <a href="#';
//line 21 "views/default/artist_list.tt"
output += '/artist/delete/99';
output += '">Del</a>\n            </th>\n        </tr>\n        ';;
            retval = list.get_next();
            value = retval[0];
            done = retval[1];
        }
    }
    catch(e) {
        throw(context.set_error(e, output));
    }
    stash.set('loop', oldloop);
})();

output += '\n    </tbody>\n</table>\n\n';
    }
    catch(e) {
        var error = context.set_error(e, output);
        throw(error);
    }

    return output;
}

Jemplate.templateMap['views/default/error.tt'] = function(context) {
    if (! context) throw('Jemplate function called without context\n');
    var stash = context.stash;
    var output = '';

    try {
output += '<div class="clear"></div>\n\n<div class="box" id="list-items">\n\n    <p>You may report these errors to support@einvoices.biz</p>\n    <ul class="menu" id="section-menu">\n        ';
//line 13 "views/default/error.tt"

// FOREACH 
(function() {
    var list = stash.get('errors');
    list = new Jemplate.Iterator(list);
    var retval = list.get_first();
    var value = retval[0];
    var done = retval[1];
    var oldloop;
    try { oldloop = stash.get('loop') } finally {}
    stash.set('loop', list);
    try {
        while (! done) {
            stash.data['er'] = value;
output += '\n        <li class=email title="Email to support team"><b>Error:</b>  <BR/>\n            <b>Message : </b>';
//line 9 "views/default/error.tt"
output += stash.get('er');
output += ' <BR/>\n            <b>URL :</b> ';
output += ' <BR/>\n            <b>Body Params:</b> \n        </li>\n        ';;
            retval = list.get_next();
            value = retval[0];
            done = retval[1];
        }
    }
    catch(e) {
        throw(context.set_error(e, output));
    }
    stash.set('loop', oldloop);
})();

output += '\n    </ul>\n</div>				\n\n\n';
    }
    catch(e) {
        var error = context.set_error(e, output);
        throw(error);
    }

    return output;
}

Jemplate.templateMap['views/default/help.tt'] = function(context) {
    if (! context) throw('Jemplate function called without context\n');
    var stash = context.stash;
    var output = '';

    try {
output += '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">\n<html xmlns="http://www.w3.org/1999/xhtml">\n	<head>\n\n		';
//line 5 "views/default/help.tt"
output += context.process('head', { 'title': 'Einvoices Help' });
output += '\n\n		<script language="javascript">\n\n		';
//line 10 "views/default/help.tt"
output += context.include('js');
output += '\n\n		 </script>\n\n	</head>\n	<body>\n		<div class="container_16">\n			\n			<div class="clear"></div>\n			<div class="grid_4 sidebar">\n\n				';
//line 21 "views/default/help.tt"
output += context.include('logo');
output += '	\n\n				';
//line 23 "views/default/help.tt"
output += context.include('help/sections');
output += '\n\n			</div><!-- grid_4 -->\n			<div class="grid_12 mainbar" >\n\n				';
//line 28 "views/default/help.tt"
output += context.include('menu');
output += '\n				<div class="box" id="content"> <!-- begin form box -->\n					\n                    ';
//line 31 "views/default/help.tt"
if (!(stash.get('section'))) {
//line 31 "views/default/help.tt"
stash.set('section', 'welcome');
}

output += '\n					';
//line 1 "views/default/help.tt"
output += context.include('help/' + stash.get('section'));
output += '\n\n				</div>\n			</div>\n				\n			<div class="clear"></div>\n			<div class="grid_16" id="site_info">\n\n				';
//line 40 "views/default/help.tt"
output += context.include('footer');
output += '\n			</div>\n			<div class="clear"></div>\n		</div>\n			</body>\n</html>\n';
    }
    catch(e) {
        var error = context.set_error(e, output);
        throw(error);
    }

    return output;
}

Jemplate.templateMap['views/default/login.tt'] = function(context) {
    if (! context) throw('Jemplate function called without context\n');
    var stash = context.stash;
    var output = '';

    try {
output += '<form action="';
//line 1 "views/default/login.tt"
output += stash.get(['c', 0, 'uri_for', [ '/check' ]]);
output += '" method="POST">\n	<fieldset class="login">\n		<legend>Login</legend>\n		';
//line 40 "views/default/login.tt"
if (!(stash.get(['c', 0, 'user_exists', 0]))) {
output += '\n		<p >\n			<label>Email: </label>\n			<input type="text" name="email" value="guest" />\n		</p>\n		<p >\n			<label>Password: </label>\n			<input type="password" name="password" value="guest" />\n		</p>\n		<p >\n			<label>Mode: </label>\n			<select name="mode" value="">\n			\n				<option selected value="default">Single Page Application using Ajax with server side templates</option>\n				<option value="jemplate">Single Page Application using REST with client side templates</option>\n				<option value="mobile">Single Page Mobile Application using Ajax with server side templates</option>\n				<option value="mjemplate">Single Page Mobile Application using Ajax with client side templates</option>\n				<option value="cgi">Multi Page Application (no Ajax) with server side templates</option>\n\n			</select>\n		</p>\n	\n		<p>\n			';
//line 27 "views/default/login.tt"
if (stash.get('message')) {
output += ' ';
//line 27 "views/default/login.tt"
output += stash.get('message');
output += ' ';
}

output += '\n		</p>\n\n		<input type=submit value="Login" />\n		<input type=reset value="Reset" />\n		<p>\n			<span class=help>Forgot Password ?</span>\n			<a style="display:inline;" class=help href="';
//line 34 "views/default/login.tt"
output += stash.get(['c', 0, 'uri_for', [ '/register' ]]);
output += '">Click here to register</a>\n			<span class=error>';
//line 35 "views/default/login.tt"
output += stash.get(['c', 0, 'stash', 0, 'recpatcha_error', 0]);
output += '</span>\n		</p>\n		';
}
else {
output += '\n\n			<a href="';
//line 39 "views/default/login.tt"
output += stash.get(['c', 0, 'uri_for', [ '/logout' ]]);
output += '"> Logout</a>\n		';
}

output += '\n	</fieldset>\n</form>\n\n';
    }
    catch(e) {
        var error = context.set_error(e, output);
        throw(error);
    }

    return output;
}

Jemplate.templateMap['views/default/reset.tt'] = function(context) {
    if (! context) throw('Jemplate function called without context\n');
    var stash = context.stash;
    var output = '';

    try {
output += '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">\n<html xmlns="http://www.w3.org/1999/xhtml">\n	<head>\n\n		';
//line 5 "views/default/reset.tt"
output += context.process('head', { 'title': 'Welcome to Invoices' });
output += '\n\n		<script language="javascript">\n\n		 </script>\n\n	</head>\n	<body>\n		<div class="container_16">\n			\n			<div class="clear"></div>\n			<!-- sidebar form container -->\n			<div class="grid_4 sidebar">\n\n				';
//line 20 "views/default/reset.tt"
output += context.include('logo');
output += '	\n			<h3>In firefox we belive</h3>\n\n			<div class="block" style="height:258px;background:url(/static/images/firefox_logo.png);background-repeat:no-repeat;"> </div>\n           	<!-- sidebar form container-->\n\n\n			</div><!-- grid_4 -->\n			<div class="grid_12 mainbar" >\n\n				';
//line 30 "views/default/reset.tt"
output += context.include('menu');
output += '\n				<div class="box" > <!-- begin form box -->\n					<div class="box" id="list-items">\n		\n						<a href=/admin/reset/1> Click here to confirm you want to reset your database</a>\n\n					</div>				\n\n				</div>\n\n			</div>\n				\n			<div class="clear"></div>\n			<div class="grid_16" id="site_info">\n\n				';
//line 45 "views/default/reset.tt"
output += context.include('footer');
output += '\n			</div>\n			<div class="clear"></div>\n		</div>\n	</body>\n</html>\n';
    }
    catch(e) {
        var error = context.set_error(e, output);
        throw(error);
    }

    return output;
}

Jemplate.templateMap['views/default/sale_list.tt'] = function(context) {
    if (! context) throw('Jemplate function called without context\n');
    var stash = context.stash;
    var output = '';

    try {
output += '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">\n<html xmlns="http://www.w3.org/1999/xhtml">\n	<head>\n\n		';
//line 5 "views/default/sale_list.tt"
output += context.process('head', { 'title': 'Sale List ' });
output += '\n\n		<script language="javascript">\n\n		';
//line 10 "views/default/sale_list.tt"
output += context.include('js');
output += '\n\n		';
//line 12 "views/default/sale_list.tt"
output += context.process('sale/js', { 'tmpl': 'list' });
output += '\n\n		 </script>\n\n	</head>\n	<body>\n		<div class="container_16">\n			\n			<div class="clear"></div>\n			<div class="grid_4 sidebar">\n\n				';
//line 25 "views/default/sale_list.tt"
output += context.include('logo');
output += '	\n\n           	<div class="block"> <!-- sidebar form container -->\n					\n					';
//line 29 "views/default/sale_list.tt"
output += context.include('sale/search');
output += '\n					\n					';
//line 31 "views/default/sale_list.tt"
output += context.include('sale/detail');
output += '\n					\n					';
//line 33 "views/default/sale_list.tt"
output += context.include('company/detail');
output += '\n					\n					';
//line 35 "views/default/sale_list.tt"
output += context.include('product/detail');
output += '\n\n			</div>	<!-- sidebar form container-->\n\n\n			</div><!-- grid_4 -->\n			<div class="grid_12 mainbar" >\n\n				';
//line 43 "views/default/sale_list.tt"
output += context.include('menu');
output += '\n				<div class="box" id="content"> <!-- begin form box -->\n					\n					';
//line 46 "views/default/sale_list.tt"
output += context.include('sale/list');
output += '\n\n				</div>\n			</div>\n				\n			<div class="clear"></div>\n			<div class="grid_16" id="site_info">\n\n				';
//line 54 "views/default/sale_list.tt"
output += context.include('footer');
output += '\n			</div>\n			<div class="clear"></div>\n		</div>\n			</body>\n</html>\n';
    }
    catch(e) {
        var error = context.set_error(e, output);
        throw(error);
    }

    return output;
}

Jemplate.templateMap['views/default/user_form.tt'] = function(context) {
    if (! context) throw('Jemplate function called without context\n');
    var stash = context.stash;
    var output = '';

    try {
output += '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">\n<html xmlns="http://www.w3.org/1999/xhtml">\n	<head>\n\n		';
//line 5 "views/default/user_form.tt"
output += context.process('head', { 'title': 'User form ' });
output += '\n\n		<script language="javascript">\n\n		';
//line 10 "views/default/user_form.tt"
output += context.include('js');
output += '\n\n		validation_rules = {\n\n				oldpassword :{\n					equalTo: "#oldpassword1"\n				},\n				password: "required",\n				password_again: {\n					equalTo: "#password"\n				}\n		};\n\n		$(document).ready(function(){\n\n			init_sidebar_forms();\n		});\n\n		 </script>\n		  <style>\n			input.error { border: 1px solid red; width: auto; }\n			label.error {\n				background: url(\'http://dev.jquery.com/view/trunk/plugins/validate/demo/images/unchecked.gif\') no-repeat;\n				padding-left: 16px;\n				margin-left: .3em;\n			}\n			label.valid {\n				background: url(\'http://dev.jquery.com/view/trunk/plugins/validate/demo/images/checked.gif\') no-repeat;\n				display: block;\n				width: 16px;\n				height: 16px;\n			}\n		</style>\n\n\n	</head>\n	<body>\n		<div class="container_16">\n			\n			<div class="clear"></div>\n			<!-- sidebar form container -->\n			<div class="grid_4 sidebar">\n\n				';
//line 53 "views/default/user_form.tt"
output += context.include('logo');
output += '	\n			<h3>In firefox we belive</h3>\n\n			<div class="block" style="height:258px;background:url(/static/images/firefox_logo.png);background-repeat:no-repeat;"> </div>\n           	<!-- sidebar form container-->\n\n\n			</div><!-- grid_4 -->\n			<div class="grid_12 mainbar" >\n\n				';
//line 63 "views/default/user_form.tt"
output += context.include('menu');
output += '\n				<div class="box" > \n				<div class="box" id="content"> <!-- begin form box -->\n					\n					';
//line 67 "views/default/user_form.tt"
output += context.include('user/form');
output += '\n\n				</div>\n				</div>\n			</div>\n				\n			<div class="clear"></div>\n			<div class="grid_16" id="site_info">\n\n				';
//line 76 "views/default/user_form.tt"
output += context.include('footer');
output += '\n			</div>\n			<div class="clear"></div>\n		</div>\n			</body>\n</html>\n';
    }
    catch(e) {
        var error = context.set_error(e, output);
        throw(error);
    }

    return output;
}

Jemplate.templateMap['views/default/welcome.tt'] = function(context) {
    if (! context) throw('Jemplate function called without context\n');
    var stash = context.stash;
    var output = '';

    try {
output += '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">\n<html xmlns="http://www.w3.org/1999/xhtml">\n	<head>\n\n		';
//line 5 "views/default/welcome.tt"
output += context.process('head', { 'title': 'Welcome to Invoices', 'skip_js': 1 });
output += '\n\n		<script language="javascript">\n            \n            ';
output += '\n\n		 </script>\n\n	</head>\n	<body>\n		<div class="container_16">\n			\n			<div class="clear"></div>\n			<!-- sidebar form container -->\n			<div class="grid_4 " id="sidebar">\n\n				';
//line 23 "views/default/welcome.tt"
output += context.include('logo');
output += '	\n			<div class="block"> \n                Mobile browser view\n			</div>	\n\n			<h3>In firefox we belive</h3>\n\n			<div class="block" style="height:258px;background:url(';
//line 30 "views/default/welcome.tt"
output += stash.get(['c', 0, 'uri_for', [ '/static/images/firefox_logo.png' ]]);
output += ');background-repeat:no-repeat;"> </div>\n           	<!-- sidebar form container-->\n\n\n			</div><!-- grid_4 -->\n			<div class="grid_12 " id="#main" >\n                ';
//line 47 "views/default/welcome.tt"
if (stash.get(['c', 0, 'user_exists', 0])) {
output += '\n                    <div class="box" > <!-- begin form box -->\n                    \n                        main content\n\n                    </div>\n                  ';
}
else {
output += '\n                    <div class="box" > <!-- begin form box -->\n                    ';
//line 1 "views/default/welcome.tt"
output += context.include(stash.get('template_prefix') + '/login.tt');
output += '\n                    \n					</div>\n                ';
}

output += '\n            </div>\n				\n			<div class="clear"></div>\n			<div class="grid_16" id="site_info">\n\n				';
//line 53 "views/default/welcome.tt"
output += context.include('footer');
output += '\n			</div>\n			<div class="clear"></div>\n		</div>\n			</body>\n</html>\n';
    }
    catch(e) {
        var error = context.set_error(e, output);
        throw(error);
    }

    return output;
}

Jemplate.templateMap['views/mobile/contact_edit.tt'] = function(context) {
    if (! context) throw('Jemplate function called without context\n');
    var stash = context.stash;
    var output = '';

    try {
output += '	\n    ';
//line 2 "views/mobile/contact_edit.tt"
output += context.process('contact/form.tt');
output += '\n\n<form action="#/contact/put" method="POST" >\n\n	<input type=hidden name="id" value="';
//line 6 "views/mobile/contact_edit.tt"
output += stash.get(['contact', 0, 'id', 0]);
output += '"/>\n	<fieldset >\n            \n            ';
//line 9 "views/mobile/contact_edit.tt"
output += context.include('contact/form/b1');
output += '\n            ';
//line 10 "views/mobile/contact_edit.tt"
output += context.include('contact/form/b2');
output += '\n\n    </fieldset>\n    <input type=submit value="Hit me"/>\n</form>\n<form action="#/contact/delete" method="POST" >\n	<input type=hidden name="id" value="';
//line 16 "views/mobile/contact_edit.tt"
output += stash.get(['contact', 0, 'id', 0]);
output += '"/>\n    <input type=submit value="Delete"/>\n</form>\n';
    }
    catch(e) {
        var error = context.set_error(e, output);
        throw(error);
    }

    return output;
}

Jemplate.templateMap['views/mobile/contact_list.tt'] = function(context) {
    if (! context) throw('Jemplate function called without context\n');
    var stash = context.stash;
    var output = '';

    try {
output += '<ul>\n\n';
//line 8 "views/mobile/contact_list.tt"

// FOREACH 
(function() {
    var list = stash.get(['contact_rs', 0, 'all', 0]);
    list = new Jemplate.Iterator(list);
    var retval = list.get_first();
    var value = retval[0];
    var done = retval[1];
    var oldloop;
    try { oldloop = stash.get('loop') } finally {}
    stash.set('loop', list);
    try {
        while (! done) {
            stash.data['row'] = value;
output += '\n    <li>\n 	<a href="#/contact/view/';
//line 5 "views/mobile/contact_list.tt"
output += stash.get(['row', 0, 'id', 0]);
output += '"> ';
//line 5 "views/mobile/contact_list.tt"
output += stash.get(['row', 0, 'name', 0]) || stash.get(['row', 0, 'id', 0]);
output += ' </a><BR>\n    <h5><i>';
//line 6 "views/mobile/contact_list.tt"
output += stash.get(['row', 0, 'tel1', 0]);
output += '</i></h5>\n    </li>\n';;
            retval = list.get_next();
            value = retval[0];
            done = retval[1];
        }
    }
    catch(e) {
        throw(context.set_error(e, output));
    }
    stash.set('loop', oldloop);
})();

output += '\n\n</ul>\n\n';
    }
    catch(e) {
        var error = context.set_error(e, output);
        throw(error);
    }

    return output;
}

Jemplate.templateMap['views/mobile/index.tt'] = function(context) {
    if (! context) throw('Jemplate function called without context\n');
    var stash = context.stash;
    var output = '';

    try {
output += '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">\n<html xmlns="http://www.w3.org/1999/xhtml">\n	<head>\n\n		';
//line 5 "views/mobile/index.tt"
output += context.process('head', { 'title': 'Welcome Back' });
output += '\n\n		<script type="text/javascript">\n            \n            ';
//line 10 "views/mobile/index.tt"
output += context.include('js');
output += '\n\n		(function($) {\n		 	var app =  $.sammy(function() {\n\n				 this.element_selector = \'#content\';\n				 this.debug = true;\n\n				 this.get(\'#/\', function(c) {\n					\n					$("#menu").show();\n					 app.swap(" Select action from above menu");\n				});\n				this.get(\'#/contact\', function(c) { \n\n					$("#menu").hide();\n					 c.partial("';
//line 26 "views/mobile/index.tt"
output += stash.get(['c', 0, 'uri_for', [ '/contact/search' ]]);
output += '" );\n				});\n				this.get(\'#/contact/view/:id\', function(c) { \n\n					$("#menu").hide();\n					 c.partial("';
//line 31 "views/mobile/index.tt"
output += stash.get(['c', 0, 'uri_for', [ '/contact/get/' ]]);
output += '" + c.params["id"]);\n				});\n				this.post(\'#/contact/delete\', function(c) { \n					\n					$("#menu").hide();\n					 //c.partial("';
//line 36 "views/mobile/index.tt"
output += stash.get(['c', 0, 'uri_for', [ '/contact/delete/' ]]);
output += '" + c.params["id"], function(html) {\n					 	app.swap("Delete Successful for " + c.params["id"]);\n					 //});\n					 return false;\n				});\n			});\n\n		$(function() {\n				app.run(\'#/\');\n		});\n		})(jQuery);\n\n    	</script>\n\n	</head>\n	<body>\n		<div class="container_4">\n			\n			<div class="clear"></div>\n			<!-- sidebar container -->\n			<div class="grid_4 " id="sidebar">\n\n				';
//line 58 "views/mobile/index.tt"
output += context.process('logo', { 'skip_welcome_message': 1 });
output += '	\n\n				';
//line 62 "views/mobile/index.tt"
output += context.process('menu', { 'menu_format': 'vertical' });
output += '\n                <div class="block" id="content"> \n                 \n\n                </div>	\n\n			</div><!-- grid_4 -->\n			<!-- sidebar container -->\n			\n			<div class="clear"></div>\n			<div class="grid_4" id="site_info">\n\n				';
//line 76 "views/mobile/index.tt"
output += context.include('footer');
output += '\n			</div>\n			<div class="clear"></div>\n		</div>\n	</body>\n</html>\n';
    }
    catch(e) {
        var error = context.set_error(e, output);
        throw(error);
    }

    return output;
}

